cscope 15 $HOME/os161/src/kern/syscall               0000027610
	@loadelf.c

53 
	~<ty≥s.h
>

54 
	~<kîn/î∫o.h
>

55 
	~<lib.h
>

56 
	~<uio.h
>

57 
	~<¥oc.h
>

58 
	~<cuºít.h
>

59 
	~<addr•a˚.h
>

60 
	~<vnode.h
>

61 
	~<ñf.h
>

79 
	$lﬂd_£gmít
(
addr•a˚
 *
as
, 
vnode
 *
v
,

80 
off_t
 
off£t
, 
vaddr_t
 
vaddr
,

81 
size_t
 
memsize
, size_à
fûesize
,

82 
is_execuèbÀ
)

84 
iovec
 
iov
;

85 
uio
 
u
;

86 
ªsu…
;

88 i‡(
fûesize
 > 
memsize
) {

89 
	`k¥ötf
("ELF: warning: segment filesize > segment memsize\n");

90 
fûesize
 = 
memsize
;

93 
	`DEBUG
(
DB_EXEC
, "ELF: Loading %lu bytesÅo 0x%lx\n",

94 (Ë
fûesize
, (Ë
vaddr
);

96 
iov
.
iov_uba£
 = (
u£Ωå_t
)
vaddr
;

97 
iov
.
iov_Àn
 = 
memsize
;

98 
u
.
uio_iov
 = &
iov
;

99 
u
.
uio_iov˙t
 = 1;

100 
u
.
uio_ªsid
 = 
fûesize
;

101 
u
.
uio_off£t
 = 
off£t
;

102 
u
.
uio_£gÊg
 = 
is_execuèbÀ
 ? 
UIO_USERISPACE
 : 
UIO_USERSPACE
;

103 
u
.
uio_rw
 = 
UIO_READ
;

104 
u
.
uio_•a˚
 = 
as
;

106 
ªsu…
 = 
	`VOP_READ
(
v
, &
u
);

107 i‡(
ªsu…
) {

108  
ªsu…
;

111 i‡(
u
.
uio_ªsid
 != 0) {

113 
	`k¥ötf
("ELF: shortÑead on segment - fileÅruncated?\n");

114  
ENOEXEC
;

133 
size_t
 
fûœmt
;

135 
fûœmt
 = 
memsize
 - 
fûesize
;

136 i‡(
fûœmt
 > 0) {

137 
	`DEBUG
(
DB_EXEC
, "ELF: Zero-filling %lu more bytes\n",

138 (Ë
fûœmt
);

139 
u
.
uio_ªsid
 +
fûœmt
;

140 
ªsu…
 = 
	`uiomovezîos
(
fûœmt
, &
u
);

145  
ªsu…
;

146 
	}
}

154 
	$lﬂd_ñf
(
vnode
 *
v
, 
vaddr_t
 *
íåypoöt
)

156 
Elf_Ehdr
 
eh
;

157 
Elf_Phdr
 
ph
;

158 
ªsu…
, 
i
;

159 
iovec
 
iov
;

160 
uio
 
ku
;

161 
addr•a˚
 *
as
;

163 
as
 = 
	`¥oc_gëas
();

169 
	`uio_köô
(&
iov
, &
ku
, &
eh
, ”h), 0, 
UIO_READ
);

170 
ªsu…
 = 
	`VOP_READ
(
v
, &
ku
);

171 i‡(
ªsu…
) {

172  
ªsu…
;

175 i‡(
ku
.
uio_ªsid
 != 0) {

177 
	`k¥ötf
("ELF: shortÑead on header - fileÅruncated?\n");

178  
ENOEXEC
;

192 i‡(
eh
.
e_idít
[
EI_MAG0
] !
ELFMAG0
 ||

193 
eh
.
e_idít
[
EI_MAG1
] !
ELFMAG1
 ||

194 
eh
.
e_idít
[
EI_MAG2
] !
ELFMAG2
 ||

195 
eh
.
e_idít
[
EI_MAG3
] !
ELFMAG3
 ||

196 
eh
.
e_idít
[
EI_CLASS
] !
ELFCLASS32
 ||

197 
eh
.
e_idít
[
EI_DATA
] !
ELFDATA2MSB
 ||

198 
eh
.
e_idít
[
EI_VERSION
] !
EV_CURRENT
 ||

199 
eh
.
e_vîsi⁄
 !
EV_CURRENT
 ||

200 
eh
.
e_ty≥
!=
ET_EXEC
 ||

201 
eh
.
e_machöe
!=
EM_MACHINE
) {

202  
ENOEXEC
;

220 
i
=0; i<
eh
.
e_phnum
; i++) {

221 
off_t
 
off£t
 = 
eh
.
e_phoff
 + 
i
*eh.
e_phítsize
;

222 
	`uio_köô
(&
iov
, &
ku
, &
ph
, ’h), 
off£t
, 
UIO_READ
);

224 
ªsu…
 = 
	`VOP_READ
(
v
, &
ku
);

225 i‡(
ªsu…
) {

226  
ªsu…
;

229 i‡(
ku
.
uio_ªsid
 != 0) {

231 
	`k¥ötf
("ELF: shortÑead onÖhdr - fileÅruncated?\n");

232  
ENOEXEC
;

235 
ph
.
p_ty≥
) {

236 
PT_NULL
: ;

237 
PT_PHDR
: ;

238 
PT_MIPS_REGINFO
: ;

239 
PT_LOAD
: ;

241 
	`k¥ötf
("loadelf: unknown segmentÅype %d\n",

242 
ph
.
p_ty≥
);

243  
ENOEXEC
;

246 
ªsu…
 = 
	`as_deföe_ªgi⁄
(
as
,

247 
ph
.
p_vaddr
,Öh.
p_memsz
,

248 
ph
.
p_Êags
 & 
PF_R
,

249 
ph
.
p_Êags
 & 
PF_W
,

250 
ph
.
p_Êags
 & 
PF_X
);

251 i‡(
ªsu…
) {

252  
ªsu…
;

256 
ªsu…
 = 
	`as_¥ï¨e_lﬂd
(
as
);

257 i‡(
ªsu…
) {

258  
ªsu…
;

265 
i
=0; i<
eh
.
e_phnum
; i++) {

266 
off_t
 
off£t
 = 
eh
.
e_phoff
 + 
i
*eh.
e_phítsize
;

267 
	`uio_köô
(&
iov
, &
ku
, &
ph
, ’h), 
off£t
, 
UIO_READ
);

269 
ªsu…
 = 
	`VOP_READ
(
v
, &
ku
);

270 i‡(
ªsu…
) {

271  
ªsu…
;

274 i‡(
ku
.
uio_ªsid
 != 0) {

276 
	`k¥ötf
("ELF: shortÑead onÖhdr - fileÅruncated?\n");

277  
ENOEXEC
;

280 
ph
.
p_ty≥
) {

281 
PT_NULL
: ;

282 
PT_PHDR
: ;

283 
PT_MIPS_REGINFO
: ;

284 
PT_LOAD
: ;

286 
	`k¥ötf
("loadelf: unknown segmentÅype %d\n",

287 
ph
.
p_ty≥
);

288  
ENOEXEC
;

291 
ªsu…
 = 
	`lﬂd_£gmít
(
as
, 
v
, 
ph
.
p_off£t
,Öh.
p_vaddr
,

292 
ph
.
p_memsz
,Öh.
p_fûesz
,

293 
ph
.
p_Êags
 & 
PF_X
);

294 i‡(
ªsu…
) {

295  
ªsu…
;

299 
ªsu…
 = 
	`as_com∂ëe_lﬂd
(
as
);

300 i‡(
ªsu…
) {

301  
ªsu…
;

304 *
íåypoöt
 = 
eh
.
e_íåy
;

307 
	}
}

	@runprogram.c

36 
	~<ty≥s.h
>

37 
	~<kîn/î∫o.h
>

38 
	~<kîn/f˙é.h
>

39 
	~<lib.h
>

40 
	~<¥oc.h
>

41 
	~<cuºít.h
>

42 
	~<addr•a˚.h
>

43 
	~<vm.h
>

44 
	~<vfs.h
>

45 
	~<sysˇŒ.h
>

46 
	~<ã°.h
>

55 
	$ru≈rogøm
(*
¥og«me
)

57 
addr•a˚
 *
as
;

58 
vnode
 *
v
;

59 
vaddr_t
 
íåypoöt
, 
°ack±r
;

60 
ªsu…
;

63 
ªsu…
 = 
	`vfs_›í
(
¥og«me
, 
O_RDONLY
, 0, &
v
);

64 i‡(
ªsu…
) {

65  
ªsu…
;

69 
	`KASSERT
(
	`¥oc_gëas
(Ë=
NULL
);

72 
as
 = 
	`as_¸óã
();

73 i‡(
as
 =
NULL
) {

74 
	`vfs_˛o£
(
v
);

75  
ENOMEM
;

79 
	`¥oc_£ès
(
as
);

80 
	`as_a˘iv©e
();

83 
ªsu…
 = 
	`lﬂd_ñf
(
v
, &
íåypoöt
);

84 i‡(
ªsu…
) {

86 
	`vfs_˛o£
(
v
);

87  
ªsu…
;

91 
	`vfs_˛o£
(
v
);

94 
ªsu…
 = 
	`as_deföe_°ack
(
as
, &
°ack±r
);

95 i‡(
ªsu…
) {

97  
ªsu…
;

101 
	`íãr_√w_¥o˚ss
(0 , 
NULL
 ,

102 
NULL
 ,

103 
°ack±r
, 
íåypoöt
);

106 
	`∑nic
("enter_new_processÑeturned\n");

107  
EINVAL
;

108 
	}
}

	@sys___getcwd.c

1 
	~<ty≥s.h
>

2 
	~<sysˇŒ.h
>

3 
	~<uio.h
>

4 
	~<kîn/iovec.h
>

5 
	~<vfs.h
>

6 
	~<lib.h
>

7 
	~<kîn/î∫o.h
>

8 
	~<c›yöout.h
>

14 
	$sys___gëcwd
(*
buf
, 
size_t
 
buÊí
, 
öt32_t
* 
ªtvÆ
){

17 if(!
buf
){

18  
EFAULT
;

22 *
c›õd_buf
 = 
	`kmÆloc
((*));

23 
îr
;

25 
uio
 
cwd
;

26 
iovec
 
iov
;

29 
	`uio_köô
(&
iov
, &
cwd
, 
c›õd_buf
, 
buÊí
, 0, 
UIO_READ
);

32 
îr
 = 
	`vfs_gëcwd
(&
cwd
);

34 if(
îr
){

35 
	`∑nic
("sys___getcwdÉrror\n");

36  
îr
;

40 
îr
 = 
	`c›yout
((c⁄° *)
c›õd_buf
, (
u£Ωå_t
)
buf
, (
size_t
)((*)));

41 
	`k‰ì
(
c›õd_buf
);

43 if(
îr
){

44  
îr
;

48 *
ªtvÆ
 = 
cwd
.
uio_off£t
;

51 
	}
}

	@sys__exit.c

1 
	~<ty≥s.h
>

2 
	~<sysˇŒ.h
>

3 
	~<pid.h
>

4 
	~<¥oc.h
>

5 
	~<thªad.h
>

6 
	~<cuºít.h
>

7 
	~<•l.h
>

8 
	~<vnode.h
>

9 
	~<addr•a˚.h
>

10 
	~<kîn/waô.h
>

11 
	$sys__exô
(
öt32_t
 
exô_code
){

15 
pid_öfo
* 
öfo
=
cuΩroc
->
pi
;

16 
	`KASSERT
(
öfo
!=
NULL
);

18 
	`KASSERT
(
cuπhªad
->
t_¥oc
==
cuΩroc
);

20 
	`lock_acquúe
(
öfo
->
pid_lock
);

23 
öfo
->
¥oc_exôed
=1;

25 
exô_ªg
=
	`_MKWAIT_EXIT
(
exô_code
);

26 
öfo
->
exô_code
=
exô_ªg
;

30 
ödex
=0;ödex<
	`¨øy_num
(
öfo
->
chûd_pid_öfo
);++index){

33 
pid_öfo
* 
chûd_öfo
=(pid_öfo*)
	`¨øy_gë
(
öfo
->
chûd_pid_öfo
,
ödex
);

38 
	`lock_acquúe
(
chûd_öfo
->
pid_lock
);

39 if(
chûd_öfo
->
¥oc_exôed
){

40 
	`¨øy_˛ónup
(
chûd_öfo
->
chûd_pid_öfo
);

41 
	`cv_brﬂdˇ°
(
chûd_öfo
->
pid_cv
,chûd_öfo->
pid_lock
);

42 
	`cv_de°roy
(
chûd_öfo
->
pid_cv
);

43 
	`lock_acquúe
(
pidèbÀ
.
lock
);

44 
	`bôm≠_unm¨k
(
pidèbÀ
.
bôm≠
,
chûd_öfo
->
pid
);

45 
	`lock_ªÀa£
(
pidèbÀ
.
lock
);

46 
	`lock_ªÀa£
(
chûd_öfo
->
pid_lock
);

47 
	`lock_de°roy
(
chûd_öfo
->
pid_lock
);

48 
	`k‰ì
(
chûd_öfo
);

51 
chûd_öfo
->
∑ª¡_pid
=-1;

52 
	`lock_ªÀa£
(
chûd_öfo
->
pid_lock
);

60 
	`¨øy_num
(
öfo
->
chûd_pid_öfo
)>0Ë
	`¨øy_ªmove
(info->child_pid_info,0);

63 if(
öfo
->
∑ª¡_pid
==-1){

68 
	`¨øy_˛ónup
(
öfo
->
chûd_pid_öfo
);

69 
	`cv_brﬂdˇ°
(
öfo
->
pid_cv
,öfo->
pid_lock
);

70 
	`cv_de°roy
(
öfo
->
pid_cv
);

72 
	`lock_acquúe
(
pidèbÀ
.
lock
);

73 
	`bôm≠_unm¨k
(
pidèbÀ
.
bôm≠
,
öfo
->
pid
);

74 
	`lock_ªÀa£
(
pidèbÀ
.
lock
);

76 
	`lock_ªÀa£
(
öfo
->
pid_lock
);

77 
	`lock_de°roy
(
öfo
->
pid_lock
);

78 
	`k‰ì
(
öfo
);

84 
	`cv_brﬂdˇ°
(
öfo
->
pid_cv
,öfo->
pid_lock
);

85 
	`lock_ªÀa£
(
öfo
->
pid_lock
);

90 
¥oc
* 
p
=
cuΩroc
;

92 if(
p
->
fd_¨øy
!=
NULL
){

94 
	`¨øy_num
(
p
->
fd_¨øy
)>0){

95 
fd_íåy
* 
„
=(fd_íåy*)
	`¨øy_gë
(
p
->
fd_¨øy
,0);

96 
	`KASSERT
(
„
!=
NULL
);

97 
	`sys_˛o£
(
„
->
fd
);

99 
	`KASSERT
(
	`¨øy_num
(
p
->
fd_¨øy
)==0);

100 
	`¨øy_˛ónup
(
p
->
fd_¨øy
);

102 
	`lock_de°roy
(
p
->
¨øy_lock
);

106 if(
p
->
p_cwd
){

107 
	`VOP_DECREF
(
p
->
p_cwd
);

108 
p
->
p_cwd
=
NULL
;

110 
	`KASSERT
(
p
!=
NULL
);

111 if(
p
->
p_addr•a˚
){

112 
addr•a˚
 *
as
;

113 
as
=
p
->
p_addr•a˚
;

114 
p
->
p_addr•a˚
=
NULL
;

115 
	`as_de°roy
(
as
);

117 
	`¥oc_ªmthªad
(
cuπhªad
);

118 
	`KASSERT
(
p
!=
NULL
);

119 
	`KASSERT
(
	`thªad¨øy_num
(&
p
->
p_thªads
)==0);

120 
	`thªad¨øy_˛ónup
(&
p
->
p_thªads
);

121 
	`•ölock_˛ónup
(&
p
->
p_lock
);

122 
	`k‰ì
(
p
->
p_«me
);

123 
	`k‰ì
(
p
);

125 
	`thªad_exô
();

127 
	}
}

130 
	$kexô
(
öt32_t
 
exô_code
){

132 
pid_öfo
* 
öfo
=
cuΩroc
->
pi
;

133 
	`KASSERT
(
öfo
!=
NULL
);

135 
	`KASSERT
(
cuπhªad
->
t_¥oc
==
cuΩroc
);

137 
	`lock_acquúe
(
öfo
->
pid_lock
);

140 
öfo
->
¥oc_exôed
=1;

142 
exô_ªg
=
	`_MKWAIT_SIG
(
exô_code
);

143 
öfo
->
exô_code
=
exô_ªg
;

147 
ödex
=0;ödex<
	`¨øy_num
(
öfo
->
chûd_pid_öfo
);++index){

150 
pid_öfo
* 
chûd_öfo
=(pid_öfo*)
	`¨øy_gë
(
öfo
->
chûd_pid_öfo
,
ödex
);

155 
	`lock_acquúe
(
chûd_öfo
->
pid_lock
);

156 if(
chûd_öfo
->
¥oc_exôed
){

157 
	`¨øy_˛ónup
(
chûd_öfo
->
chûd_pid_öfo
);

158 
	`cv_brﬂdˇ°
(
chûd_öfo
->
pid_cv
,chûd_öfo->
pid_lock
);

159 
	`cv_de°roy
(
chûd_öfo
->
pid_cv
);

160 
	`lock_acquúe
(
pidèbÀ
.
lock
);

161 
	`bôm≠_unm¨k
(
pidèbÀ
.
bôm≠
,
chûd_öfo
->
pid
);

162 
	`lock_ªÀa£
(
pidèbÀ
.
lock
);

163 
	`lock_ªÀa£
(
chûd_öfo
->
pid_lock
);

164 
	`lock_de°roy
(
chûd_öfo
->
pid_lock
);

165 
	`k‰ì
(
chûd_öfo
);

168 
chûd_öfo
->
∑ª¡_pid
=-1;

169 
	`lock_ªÀa£
(
chûd_öfo
->
pid_lock
);

177 
	`¨øy_num
(
öfo
->
chûd_pid_öfo
)>0Ë
	`¨øy_ªmove
(info->child_pid_info,0);

180 if(
öfo
->
∑ª¡_pid
==-1){

185 
	`¨øy_˛ónup
(
öfo
->
chûd_pid_öfo
);

186 
	`cv_brﬂdˇ°
(
öfo
->
pid_cv
,öfo->
pid_lock
);

187 
	`cv_de°roy
(
öfo
->
pid_cv
);

189 
	`lock_acquúe
(
pidèbÀ
.
lock
);

190 
	`bôm≠_unm¨k
(
pidèbÀ
.
bôm≠
,
öfo
->
pid
);

191 
	`lock_ªÀa£
(
pidèbÀ
.
lock
);

193 
	`lock_ªÀa£
(
öfo
->
pid_lock
);

194 
	`lock_de°roy
(
öfo
->
pid_lock
);

195 
	`k‰ì
(
öfo
);

201 
	`cv_brﬂdˇ°
(
öfo
->
pid_cv
,öfo->
pid_lock
);

202 
	`lock_ªÀa£
(
öfo
->
pid_lock
);

207 
¥oc
* 
p
=
cuΩroc
;

209 if(
p
->
fd_¨øy
!=
NULL
){

211 
	`¨øy_num
(
p
->
fd_¨øy
)>0){

212 
fd_íåy
* 
„
=(fd_íåy*)
	`¨øy_gë
(
p
->
fd_¨øy
,0);

213 
	`KASSERT
(
„
!=
NULL
);

214 
	`sys_˛o£
(
„
->
fd
);

216 
	`KASSERT
(
	`¨øy_num
(
p
->
fd_¨øy
)==0);

217 
	`¨øy_˛ónup
(
p
->
fd_¨øy
);

219 
	`lock_de°roy
(
p
->
¨øy_lock
);

223 if(
p
->
p_cwd
){

224 
	`VOP_DECREF
(
p
->
p_cwd
);

225 
p
->
p_cwd
=
NULL
;

227 
	`KASSERT
(
p
!=
NULL
);

228 if(
p
->
p_addr•a˚
){

229 
addr•a˚
 *
as
;

230 
as
=
p
->
p_addr•a˚
;

231 
p
->
p_addr•a˚
=
NULL
;

232 
	`as_de°roy
(
as
);

234 
	`¥oc_ªmthªad
(
cuπhªad
);

235 
	`KASSERT
(
p
!=
NULL
);

236 
	`KASSERT
(
	`thªad¨øy_num
(&
p
->
p_thªads
)==0);

237 
	`thªad¨øy_˛ónup
(&
p
->
p_thªads
);

238 
	`•ölock_˛ónup
(&
p
->
p_lock
);

239 
	`k‰ì
(
p
->
p_«me
);

240 
	`k‰ì
(
p
);

242 
	`thªad_exô
();

243 
	}
}

	@sys_chdir.c

1 
	~<ty≥s.h
>

2 
	~<sysˇŒ.h
>

3 
	~<vfs.h
>

4 
	~<kîn/î∫o.h
>

5 
	~<lib.h
>

6 
	~<c›yöout.h
>

11 
	$sys_chdú
(c⁄° *
∑th«me
, 
öt32_t
* 
ªtvÆ
){

14 if(!
∑th«me
){

15  
EFAULT
;

19 *
check±r
 = 
	`kmÆloc
((*));

20 
îr
 = 
	`c›yö
((
c⁄°_u£Ωå_t
)
∑th«me
, (*)
check±r
, (*));

21 
	`k‰ì
(
check±r
);

23 if(
îr
){

24  
îr
;

28 
Àn
 = 
	`°æí
(
∑th«me
);

30 if(
Àn
 == 0){

31  
EINVAL
;

35 *
∑th
 = 
	`kmÆloc
((*));

36 
size_t
 *
gŸ_Àn
 = 
	`kmÆloc
((size_t *));

37 
îr
 = 
	`c›yö°r
((
c⁄°_u£Ωå_t
)
∑th«me
, 
∑th
, (
size_t
)(
Àn
+1), 
gŸ_Àn
);

39 
	`k‰ì
(
gŸ_Àn
);

41 if(
îr
){

42 
	`k‰ì
(
∑th
);

43  
îr
;

47 
îr
 = 
	`vfs_chdú
(
∑th
);

50 if(
îr
){

51 *
ªtvÆ
 = (
öt32_t
)-1;

53 *
ªtvÆ
 = (
öt32_t
)0;

56  
îr
;

57 
	}
}

	@sys_close.c

1 
	~<ty≥s.h
>

2 
	~<sysˇŒ.h
>

3 
	~<cuºít.h
>

4 
	~<limôs.h
>

5 
	~<vnode.h
>

6 
	~<vfs.h
>

7 
	~<lib.h
>

8 
	~<fûëabÀ.h
>

9 
	~<¥oc.h
>

10 
	~<synch.h
>

11 
	~<kîn/î∫o.h
>

13 
	$sys_˛o£
 (
fd
){

15 
	`KASSERT
(
cuΩroc
!=
NULL
);

16 
	`lock_acquúe
(
cuΩroc
->
¨øy_lock
);

18 
ödex
=-1;

19 
fd_íåy
* 
„
=
	`gë
(
cuΩroc
->
fd_¨øy
,
fd
,&
ödex
);

20 if(
„
==
NULL
){

21 
	`lock_ªÀa£
(
cuΩroc
->
¨øy_lock
);

22  
EBADF
;

24 
	`KASSERT
(
ödex
!=-1);

25 
fûe
* fûe=
„
->
f
;

26 
vnode
* 
vn
=
fûe
->vn;

27 
lock
* 
l
=
fûe
->l;

29 
	`lock_acquúe
(
l
);

30 
	`KASSERT
(
fûe
->
ªfcou¡
>=1);

32 --(
fûe
->
ªfcou¡
);

34 if(
fûe
->
ªfcou¡
==0){

35 
	`VOP_DECREF
(
vn
);

36 
fûe
->
vÆid
=0;

37 
fûe
->
vn
=
NULL
;

38 
	`lock_ªÀa£
(
l
);

39 
	`lock_de°roy
(
l
);

40 
	`k‰ì
(
fûe
);

41 
„
->
f
=
NULL
;

42 
	`¨øy_ªmove
(
cuΩroc
->
fd_¨øy
,
ödex
);

43 
	`k‰ì
(
„
);

44 
	`lock_ªÀa£
(
cuΩroc
->
¨øy_lock
);

49 
„
->
f
=
NULL
;

50 
	`¨øy_ªmove
(
cuΩroc
->
fd_¨øy
,
ödex
);

51 
	`k‰ì
(
„
);

52 
	`lock_ªÀa£
(
l
);

53 
	`lock_ªÀa£
(
cuΩroc
->
¨øy_lock
);

59 
	}
}

	@sys_dup2.c

1 
	~<ty≥s.h
>

2 
	~<sysˇŒ.h
>

3 
	~<lib.h
>

4 
	~<fûëabÀ.h
>

5 
	~<cuºít.h
>

6 
	~<¥oc.h
>

7 
	~<kîn/î∫o.h
>

8 
	~<¨øy.h
>

9 
	~<limôs.h
>

10 
	$sys_dup2
(
ﬁdfd
, 
√wfd
,
öt32_t
* 
ªtvÆ
){

11 if(
√wfd
>=
OPEN_MAX
Ë 
EBADF
;

13 
	`lock_acquúe
(
cuΩroc
->
¨øy_lock
);

14 
fd_íåy
* 
„
=
	`gë
(
cuΩroc
->
fd_¨øy
,
ﬁdfd
,
NULL
);

15 if(
„
==
NULL
||
√wfd
<0){

16 
	`lock_ªÀa£
(
cuΩroc
->
¨øy_lock
);

17  
EBADF
;

20 if(
ﬁdfd
==
√wfd
){

21 *
ªtvÆ
=
√wfd
;

22 
	`lock_ªÀa£
(
cuΩroc
->
¨øy_lock
);

26 if(
	`gë
(
cuΩroc
->
fd_¨øy
,
√wfd
,
NULL
)!=NULL){

27 
	`sys_˛o£
(
√wfd
);

30 if(
	`¨øy_num
(
cuΩroc
->
fd_¨øy
)>=
OPEN_MAX
){

31 
	`lock_ªÀa£
(
cuΩroc
->
¨øy_lock
);

32  
EMFILE
;;

35 
fd_íåy
* 
√w_fdíåy
=
	`kmÆloc
((fd_entry));

36 if(
√w_fdíåy
==
NULL
Ë 
ENFILE
;

38 
√w_fdíåy
->
fd
=
√wfd
;

39 
√w_fdíåy
->
f
=
„
->f;

40 ++((
„
->
f
)->
ªfcou¡
);

41 
	`VOP_INCREF
(
„
->
f
->
vn
);

42 
	`¨øy_add
(
cuΩroc
->
fd_¨øy
,
√w_fdíåy
,
NULL
);

43 *
ªtvÆ
=
√wfd
;

44 
	`lock_ªÀa£
(
cuΩroc
->
¨øy_lock
);

47 
	}
}

	@sys_execv.c

1 
	~<ty≥s.h
>

2 
	~<kîn/î∫o.h
>

3 
	~<limôs.h
>

4 
	~<cuºít.h
>

5 
	~<addr•a˚.h
>

6 
	~<c›yöout.h
>

7 
	~<sysˇŒ.h
>

8 
	~<vfs.h
>

9 
	~<lib.h
>

10 
	~<kîn/f˙é.h
>

11 
	~<vnode.h
>

12 
	~<vm.h
>

13 
	~<¥oc.h
>

14 
	$sys_execv
(c⁄° * 
¥ogøm
,** 
¨gs
){

16 
addr•a˚
* 
√w_as
=
	`as_¸óã
();

17 if(
√w_as
==
NULL
Ë 
ENOMEM
;

18 
addr•a˚
* 
ﬁd_as
=
	`¥oc_gëas
();

19 
	`KASSERT
(
ﬁd_as
!=
NULL
);

20 
îr
;

21 * 
«me
=
NULL
;

22 
vnode
* 
v
;

23 
«me
=
	`k°rdup
(
¥ogøm
);

25 
îr
=
	`vfs_›í
(
«me
,
O_RDONLY
,0,&
v
);

26 if(
îr
){

27 
	`as_de°roy
(
√w_as
);

28 
	`k‰ì
(
«me
);

29  
îr
;

31 
	`k‰ì
(
«me
);

33 
vaddr_t
 
íåypoöt
,
°ack±r
;

34 
	`¥oc_£ès
(
√w_as
);

35 
	`as_a˘iv©e
();

36 
îr
=
	`lﬂd_ñf
(
v
,&
íåypoöt
);

37 if(
îr
){

38 
	`as_dó˘iv©e
();

39 
	`¥oc_£ès
(
ﬁd_as
);

40 
	`as_a˘iv©e
();

42 
	`as_de°roy
(
√w_as
);

43 
	`vfs_˛o£
(
v
);

44  
îr
;

47 
	`vfs_˛o£
(
v
);

49 
îr
=
	`as_deföe_°ack
(
√w_as
,&
°ack±r
);

50 if(
îr
){

51 
	`as_dó˘iv©e
();

52 
	`¥oc_£ès
(
ﬁd_as
);

53 
	`as_a˘iv©e
();

55 
	`as_de°roy
(
√w_as
);

56  
îr
;

60 
	`as_dó˘iv©e
();

61 
	`¥oc_£ès
(
ﬁd_as
);

62 
	`as_a˘iv©e
();

65 
¨gc
=0;

66 
size_t
 
p_size
=(*);

67 ** 
kaddr
=(**)
	`kmÆloc
(
p_size
);

69 
îr
=
	`c›yö
((
c⁄°_u£Ωå_t
)(
¨gs
+
¨gc
),
kaddr
,
p_size
);

70 if(
îr
){

71 
	`as_de°roy
(
√w_as
);

72 
	`k‰ì
(
kaddr
);

73  
îr
;

75 if(*
kaddr
==
NULL
) ;

76 ++
¨gc
;

79 if((
¨gc
*
p_size
+((*)0))>
ARG_MAX
){

80 
	`as_de°roy
(
√w_as
);

81 
	`k‰ì
(
kaddr
);

82  
E2BIG
;

85 
size_t
 
tŸÆ_Àn
=0;

86 
size_t
 
ö°r_Àn
;

87 
size_t
 
out°r_Àn
;

88 * 
k°r
=(*)
	`kmÆloc
(()*20);

90 
ödex
=0;ödex<
¨gc
;++index){

91 
	`c›yö
((
c⁄°_u£Ωå_t
)(
¨gs
+
ödex
),
kaddr
,
p_size
);

92 
îr
=
	`c›yö°r
((
c⁄°_u£Ωå_t
)*
kaddr
,
k°r
,
ARG_MAX
,&
ö°r_Àn
);

93 if(
îr
){

94 
	`as_de°roy
(
√w_as
);

95 
	`k‰ì
(
kaddr
);

96 
	`k‰ì
(
k°r
);

97  
EFAULT
;

99 
tŸÆ_Àn
+=
ö°r_Àn
;

102 
u£Ωå_t
 
¨r_ba£
=(u£Ωå_t)(
°ack±r
-(
¨gc
+1)*(*)-
tŸÆ_Àn
);

103 
u£Ωå_t
 
°r_ba£
=(u£Ωå_t)(
°ack±r
-
tŸÆ_Àn
);

106 
u£Ωå_t
 
¨gv

¨r_ba£
;

108 
°ack±r
=(
vaddr_t
)
¨r_ba£
;

110 * 
k_¨rba£
=
	`kmÆloc
((*));

111 
ödex
=0;ödex<
¨gc
;++index){

112 
	`c›yö
((
c⁄°_u£Ωå_t
)(
¨gs
+
ödex
),
kaddr
,
p_size
);

113 
îr
=
	`c›yö°r
((
c⁄°_u£Ωå_t
)*
kaddr
,
k°r
,
ARG_MAX
,&
ö°r_Àn
);

116 if(
îr
){

117 
	`k¥ötf
("enterÉrr\n");

118 
	`as_de°roy
(
√w_as
);

119 
	`k‰ì
(
kaddr
);

120 
	`k‰ì
(
k°r
);

121  
EFAULT
;

123 
	`as_dó˘iv©e
();

124 
	`¥oc_£ès
(
√w_as
);

125 
	`as_a˘iv©e
();

128 *
k_¨rba£
=
°r_ba£
;

129 
îr
=
	`c›yout
((c⁄° *)
k_¨rba£
,(
u£Ωå_t
)
¨r_ba£
,(*));

130 if(
îr
){

131 
	`as_de°roy
(
√w_as
);

132 
	`k‰ì
(
kaddr
);

133 
	`k‰ì
(
k°r
);

134  
EFAULT
;

136 
îr
=
	`c›yout°r
(
k°r
,
°r_ba£
,
ARG_MAX
,&
out°r_Àn
);

137 if(
îr
){

138 
	`as_de°roy
(
√w_as
);

139 
	`k‰ì
(
kaddr
);

140 
	`k‰ì
(
k°r
);

141  
EFAULT
;

143 
	`KASSERT
(
out°r_Àn
==
ö°r_Àn
);

144 
¨r_ba£
+=(*);

145 
°r_ba£
+=
ö°r_Àn
;

150 
	`KASSERT
(
out°r_Àn
==
ö°r_Àn
);

151 
	`as_dó˘iv©e
();

152 
	`¥oc_£ès
(
ﬁd_as
);

153 
	`as_a˘iv©e
();

156 
	`as_dó˘iv©e
();

157 
	`¥oc_£ès
(
√w_as
);

158 
	`as_a˘iv©e
();

160 *
kaddr
=
NULL
;

161 
îr
=
	`c›yout
(
kaddr
,
¨r_ba£
,
p_size
);

162 if(
îr
){

163 
	`k¥ötf
("enterÉrr\n");

164 
	`as_dó˘iv©e
();

165 
	`¥oc_£ès
(
ﬁd_as
);

166 
	`as_a˘iv©e
();

168 
	`k‰ì
(
kaddr
);

169 
	`k‰ì
(
k°r
);

170 
	`as_de°roy
(
ﬁd_as
);

171  
EFAULT
;

183 
	`as_de°roy
(
ﬁd_as
);

184 
îr
=
	`c›yö
((
u£Ωå_t
)(
¨gv
),
kaddr
,
p_size
);

185 if(
îr
){

186 
	`k¥ötf
("err!!!\n");

188 
	`k¥ötf
("kadd∏i†%x\n",()*
kaddr
);

189 
	`k¥ötf
("¨gv: %x\n",()
¨gv
);

194 
	`íãr_√w_¥o˚ss
(
¨gc
,(
u£Ωå_t
)
¨gv
,
NULL
,
°ack±r
,
íåypoöt
);

195 
	}
}

	@sys_fork.c

1 
	~<ty≥s.h
>

2 
	~<•l.h
>

3 
	~<lib.h
>

4 
	~<kîn/î∫o.h
>

5 
	~<addr•a˚.h
>

6 
	~<cuºít.h
>

7 
	~<¥oc.h
>

8 
	~<pid.h
>

9 
	~<thªad.h
>

10 
	~<mùs/å≠‰ame.h
>

11 
	~<limôs.h
>

12 
	~<synch.h
>

13 
	~<sysˇŒ.h
>

15 
sys_f‹k
(
å≠‰ame
* 
tf
,(*
íåypoöt
)(*
d©a1
, 
d©a2
),
öt32_t
* 
ªtvÆ
){

17 
îr
;

20 
å≠‰ame
* 
tf_c›y
=(å≠‰ame*)
	`kmÆloc
((trapframe));

21 
	`memmove
(
tf_c›y
,
tf
,(
å≠‰ame
));

23 
¥oc
* 
√w¥oc
;

25 
√w¥oc
=(
¥oc
*)
	`kmÆloc
((proc));

26 if(
√w¥oc
==
NULL
){

27 
	`k‰ì
(
tf_c›y
);

28  
ENOMEM
;

30 
√w¥oc
->
p_«me
=
	`k°rdup
("proc");

31 if(
√w¥oc
->
p_«me
==
NULL
){

32 
	`k‰ì
(
√w¥oc
);

33 
	`k‰ì
(
tf_c›y
);

34  
ENOMEM
;

36 
	`thªad¨øy_öô
(&
√w¥oc
->
p_thªads
);

37 
	`•ölock_öô
(&
√w¥oc
->
p_lock
);

38 
√w¥oc
->
p_addr•a˚
=
NULL
;

39 
√w¥oc
->
p_cwd
=
NULL
;

40 
√w¥oc
->
fd_¨øy
=
	`¨øy_¸óã
();

41 
√w¥oc
->
¨øy_lock
=
	`lock_¸óã
("l");

47 
îr
=
	`as_c›y
(
cuΩroc
->
p_addr•a˚
,&(
√w¥oc
->p_addrspace));

48 if(
îr
){

49 
	`k‰ì
(
tf_c›y
);

50 
	`¥oc_de°roy
(
√w¥oc
);

51  
îr
;

54 
	`fd_¨øy_c›y
(
cuΩroc
,
√w¥oc
);

57 
	`•ölock_acquúe
(&
cuΩroc
->
p_lock
);

58 i‡(
cuΩroc
->
p_cwd
 !
NULL
) {

59 
	`VOP_INCREF
(
cuΩroc
->
p_cwd
);

60 
√w¥oc
->
p_cwd
 = 
cuΩroc
->p_cwd;

62 
	`•ölock_ªÀa£
(&
cuΩroc
->
p_lock
);

63 
pid_t
 
chûd_pid
=-1;

64 
îr
=
	`gë_pid
(&
pidèbÀ
,&
chûd_pid
);

65 if(
îr
){

66 
	`k‰ì
(
tf_c›y
);

67 
	`¥oc_de°roy
(
√w¥oc
);

68  
îr
;

70 
	`KASSERT
(
chûd_pid
>=
PID_MIN
&&chûd_pid<=
PID_MAX
);

72 
pid_öfo
* 
pi
=(pid_öfo*)
	`kmÆloc
((pid_info));

73 if(
pi
==
NULL
){

74 
	`k‰ì
(
tf_c›y
);

75 
	`¥oc_de°roy
(
√w¥oc
);

76  
ENPROC
;

79 
pi
->
pid
=
chûd_pid
;

80 
pi
->
∑ª¡_pid
=
cuΩroc
->pi->
pid
;

81 
pi
->
¥oc_exôed
=0;

82 
pi
->
waôed
=0;

83 
pi
->
pid_lock
=
	`lock_¸óã
("l");

84 
pi
->
pid_cv
=
	`cv_¸óã
("cv");

85 
pi
->
chûd_pid_öfo
=
	`¨øy_¸óã
();

86 
√w¥oc
->
pi
=pi;

87 
	`add_pid
(&
pidèbÀ
,
pi
);

90 
	`lock_acquúe
(
cuΩroc
->
pi
->
pid_lock
);

91 
	`¨øy_add
(
cuΩroc
->
pi
->
chûd_pid_öfo
,pi,
NULL
);

93 
	`lock_ªÀa£
(
cuΩroc
->
pi
->
pid_lock
);

96 
	`thªad_f‹k
("¥oc",
√w¥oc
,
íåypoöt
,
tf_c›y
,0 );

98 *
ªtvÆ
=
chûd_pid
;

101 
	}
}

	@sys_getpid.c

1 
	~<ty≥s.h
>

2 
	~<cuºít.h
>

3 
	~<sysˇŒ.h
>

4 
	~<pid.h
>

5 
	~<¥oc.h
>

7 
	$sys_gëpid
(
öt32_t
* 
ªtvÆ
){

8 *
ªtvÆ
=(
öt32_t
)(
cuΩroc
->
pi
->
pid
);

10 
	}
}

	@sys_lseek.c

1 
	~<ty≥s.h
>

2 
	~<sysˇŒ.h
>

3 
	~<cuºít.h
>

4 
	~<fûëabÀ.h
>

5 
	~<¥oc.h
>

6 
	~<¨øy.h
>

7 
	~<kîn/£ek.h
>

8 
	~<kîn/°©.h
>

9 
	~<kîn/î∫o.h
>

10 
	~<kîn/°©ty≥s.h
>

12 
	$sys_l£ek
(
fd
, 
off_t
 
pos
, 
whí˚
,off_t* 
ªtvÆ
){

13 
fd_íåy
* 
„
=
	`gë
(
cuΩroc
->
fd_¨øy
,
fd
,
NULL
);

15 if(
„
==
NULL
Ë 
EBADF
;

17 
mode_t
 
ty≥
;

18 
fûe
* fûe=
„
->
f
;

19 
vnode
* 
vn
=
fûe
->vn;

20 
lock
* 
l
=
fûe
->l;

21 
off_t
 
√woff£t
;

23 
	`VOP_GETTYPE
(
vn
,&
ty≥
);

24 
ty≥
Òy≥&
_S_IFMT
;

25 if(
ty≥
==
_S_IFCHR
||ty≥==
_S_IFBLK
Ë 
ESPIPE
;

27 
	`lock_acquúe
(
l
);

29 if(
whí˚
==
SEEK_SET
){

30 
√woff£t
=
pos
;

32 if(
whí˚
==
SEEK_CUR
){

33 
√woff£t
=
fûe
->
off£t
+
pos
;

35 i‡(
whí˚
==
SEEK_END
){

36 
°©
* 
s
=
	`kmÆloc
((stat));

37 
	`KASSERT
(
s
!=
NULL
);

38 
	`VOP_STAT
(
vn
,
s
);

39 
√woff£t
=
s
->
°_size
+
pos
;

40 
	`k‰ì
(
s
);

43 
	`lock_ªÀa£
(
l
);

44  
EINVAL
;

47 if(
√woff£t
<0){

48 
	`lock_ªÀa£
(
l
);

49  
EINVAL
;

52 
fûe
->
off£t
=
√woff£t
;

53 *
ªtvÆ
=
√woff£t
;

54 
	`lock_ªÀa£
(
l
);

56 
	}
}

	@sys_open.c

1 
	~<ty≥s.h
>

2 
	~<sysˇŒ.h
>

3 
	~<cuºít.h
>

4 
	~<limôs.h
>

5 
	~<vnode.h
>

6 
	~<vfs.h
>

7 
	~<lib.h
>

8 
	~<fûëabÀ.h
>

9 
	~<¥oc.h
>

10 
	~<synch.h
>

11 
	~<kîn/î∫o.h
>

12 
	~<¨øy.h
>

13 
	~<vnode.h
>

14 
	~<kîn/°©.h
>

15 
	~<kîn/f˙é.h
>

16 
	~<c›yöout.h
>

18 
	$sys_›í
 (c⁄° *
fûíame
, 
Êags
, 
mode_t
 
mode
,
öt32_t
* 
ªtVÆ
){

22 if(!
fûíame
){

23  
EFAULT
;

27 * 
check_«me
=
	`kmÆloc
((*));

28 
±r_îr
 = 
	`c›yö
((
c⁄°_u£Ωå_t
)
fûíame
, (*)
check_«me
, (*));

29 
	`k‰ì
(
check_«me
);

30 if(
±r_îr
){

31  
±r_îr
;

39 
	`lock_acquúe
(
cuΩroc
->
¨øy_lock
);

40 if(
	`¨øy_num
(
cuΩroc
->
fd_¨øy
)>=
OPEN_MAX
){

41 
	`lock_ªÀa£
(
cuΩroc
->
¨øy_lock
);

42  
EMFILE
;

44 
fd
=0;

45 
	`gë
(
cuΩroc
->
fd_¨øy
,
fd
,
NULL
)!=NULL) ++fd;

47 
vnode
* 
vn
;

48 
fd_íåy
* 
„
;

49 
fûe
* file;

50 
îr
;

51 * 
«me
=
	`k°rdup
(
fûíame
);

52 
îr
=
	`vfs_›í
(
«me
,
Êags
,
mode
,&
vn
);

53 if(
îr
) {

54 
	`lock_ªÀa£
(
cuΩroc
->
¨øy_lock
);

55  
îr
;

58 
fûe
=
	`kmÆloc
((file));

59 if(
fûe
==
NULL
){

60 
	`lock_ªÀa£
(
cuΩroc
->
¨øy_lock
);

61  
ENFILE
;

65 
fûe
->
ªfcou¡
=1;

66 
fûe
->
°©us
=
Êags
;

67 
fûe
->
vn
=vn;

68 
fûe
->
l
=
	`lock_¸óã
("l");

69 
fûe
->
vÆid
=1;

70 if(
Êags
&
O_APPEND
){

71 
°©
* 
s
=
	`kmÆloc
((stat));

72 
	`KASSERT
(
s
!=
NULL
);

73 
	`VOP_STAT
(
vn
,
s
);

74 
fûe
->
off£t
=
s
->
°_size
;

77 
fûe
->
off£t
=0;

79 
„
=
	`kmÆloc
((
fd_íåy
));

80 if(
„
==
NULL
) {

81 
	`lock_ªÀa£
(
cuΩroc
->
¨øy_lock
);

82  
EMFILE
;

85 
„
->
fd
=fd;

86 
„
->
f
=
fûe
;

88 
	`fûëabÀ_ö£π
(&
fûëabÀ
,
fûe
);

89 
	`¨øy_add
(
cuΩroc
->
fd_¨øy
,
„
,
NULL
);

90 *
ªtVÆ
=
fd
;

91 
	`lock_ªÀa£
(
cuΩroc
->
¨øy_lock
);

93 
	}
}

	@sys_read.c

1 
	~<ty≥s.h
>

2 
	~<sysˇŒ.h
>

3 
	~<cuºít.h
>

4 
	~<limôs.h
>

5 
	~<vnode.h
>

6 
	~<vfs.h
>

7 
	~<lib.h
>

8 
	~<fûëabÀ.h
>

9 
	~<¥oc.h
>

10 
	~<synch.h
>

11 
	~<kîn/î∫o.h
>

12 
	~<uio.h
>

13 
	~<kîn/iovec.h
>

14 
	~<kîn/f˙é.h
>

15 
	~<c›yöout.h
>

17 
	$sys_ªad
 (
fd
, *
buf
, 
size_t
 
buÊí
,
öt32_t
* 
ªtVÆ
){

19 if(!
buf
){

20  
EFAULT
;

24 * 
check_buf
 = 
	`kmÆloc
((*));

25 
±r_îr
 = 
	`c›yö
((
c⁄°_u£Ωå_t
)
buf
, (*)
check_buf
, (*));

26 
	`k‰ì
(
check_buf
);

27 if(
±r_îr
){

28  
±r_îr
;

31 
fd_íåy
* 
„
=
	`gë
(
cuΩroc
->
fd_¨øy
,
fd
,
NULL
);

33 if(
„
==
NULL
Ë 
EBADF
;

35 
fûe
* fûe=
„
->
f
;

36 
vnode
* 
vn
=
fûe
->vn;

37 
Êags
=(
fûe
->
°©us
)&
O_ACCMODE
;

39 if(
Êags
&
O_WRONLY
Ë 
EBADF
;

41 
uio
 
ku
;

42 
iovec
 
iov
;

43 
îr
;

45 
	`uio_köô
(&
iov
,&
ku
,
buf
,
buÊí
,
fûe
->
off£t
,
UIO_READ
);

47 
îr
=
	`VOP_READ
(
vn
,&
ku
);

49 if(
îr
){

50 
	`∑nic
("sysÑeadÉrror\n");

51  
îr
;

55 
fûe
->
off£t
=
ku
.
uio_off£t
;

57 *
ªtVÆ
=
buÊí
-
ku
.
uio_ªsid
;

59 
	}
}

	@sys_waitpid.c

1 
	~<ty≥s.h
>

2 
	~<cuºít.h
>

3 
	~<¥oc.h
>

4 
	~<pid.h
>

5 
	~<kîn/î∫o.h
>

6 
	~<sysˇŒ.h
>

7 
	~<synch.h
>

8 
	~<c›yöout.h
>

9 
	$sys_waôpid
(
pid_t
 
pid
,* 
°©us
,
›ti⁄s
,
öt32_t
* 
ªtvÆ
){

11 if(
›ti⁄s
!=0Ë 
EINVAL
;

26 
pid_öfo
* 
öfo
=
	`gë_¥oc
(&
pidèbÀ
,
pid
);

27 if(
öfo
==
NULL
) {

28  
ESRCH
;

32 
	`lock_acquúe
(
öfo
->
pid_lock
);

33 if(
öfo
->
∑ª¡_pid
!=-1&&öfo->∑ª¡_pid!=
cuΩroc
->
pi
->
pid
){

34 
	`lock_ªÀa£
(
öfo
->
pid_lock
);

35  
ECHILD
;

38 
öfo
->
¥oc_exôed
==0){

39 
	`cv_waô
(
öfo
->
pid_cv
,öfo->
pid_lock
);

41 *
°©us
=
öfo
->
exô_code
;

42 *
ªtvÆ
=
pid
;

43 
	`KASSERT
(
	`¨øy_num
(
öfo
->
chûd_pid_öfo
)==0);

44 
	`¨øy_˛ónup
(
öfo
->
chûd_pid_öfo
);

45 
	`cv_de°roy
(
öfo
->
pid_cv
);

46 
	`lock_acquúe
(
pidèbÀ
.
lock
);

47 
	`bôm≠_unm¨k
(
pidèbÀ
.
bôm≠
,
öfo
->
pid
);

48 
	`lock_ªÀa£
(
pidèbÀ
.
lock
);

49 
ödex
=0;ödex<
	`¨øy_num
(
cuΩroc
->
pi
->
chûd_pid_öfo
);++index){

50 
pid_öfo
* 
ãmp
=(pid_öfo*Ë
	`¨øy_gë
(
cuΩroc
->
pi
->
chûd_pid_öfo
,
ödex
);

51 if(
ãmp
->
pid
==pid){

52 
	`¨øy_ªmove
(
cuΩroc
->
pi
->
chûd_pid_öfo
,
ödex
);

56 
	`lock_ªÀa£
(
öfo
->
pid_lock
);

57 
	`lock_de°roy
(
öfo
->
pid_lock
);

58 
	`k‰ì
(
öfo
);

61 
	}
}

64 
	$kwaôpid
(
pid_t
 
pid
){

66 
pid_öfo
* 
öfo
=
	`gë_¥oc
(&
pidèbÀ
,
pid
);

67 if(
öfo
==
NULL
) {

68  
ESRCH
;

72 
	`lock_acquúe
(
öfo
->
pid_lock
);

73 if(
öfo
->
∑ª¡_pid
!=-1&&öfo->∑ª¡_pid!=
cuΩroc
->
pi
->
pid
){

74 
	`lock_ªÀa£
(
öfo
->
pid_lock
);

75  
ECHILD
;

78 
öfo
->
¥oc_exôed
==0){

79 
	`cv_waô
(
öfo
->
pid_cv
,öfo->
pid_lock
);

81 
	`KASSERT
(
	`¨øy_num
(
öfo
->
chûd_pid_öfo
)==0);

82 
	`¨øy_˛ónup
(
öfo
->
chûd_pid_öfo
);

83 
	`cv_de°roy
(
öfo
->
pid_cv
);

84 
	`lock_acquúe
(
pidèbÀ
.
lock
);

85 
	`bôm≠_unm¨k
(
pidèbÀ
.
bôm≠
,
öfo
->
pid
);

86 
	`lock_ªÀa£
(
pidèbÀ
.
lock
);

87 
ödex
=0;ödex<
	`¨øy_num
(
cuΩroc
->
pi
->
chûd_pid_öfo
);++index){

88 
pid_öfo
* 
ãmp
=(pid_öfo*Ë
	`¨øy_gë
(
cuΩroc
->
pi
->
chûd_pid_öfo
,
ödex
);

89 if(
ãmp
->
pid
==pid){

90 
	`¨øy_ªmove
(
cuΩroc
->
pi
->
chûd_pid_öfo
,
ödex
);

94 
	`lock_ªÀa£
(
öfo
->
pid_lock
);

95 
	`lock_de°roy
(
öfo
->
pid_lock
);

96 
	`k‰ì
(
öfo
);

99 
	}
}

	@sys_write.c

1 
	~<ty≥s.h
>

2 
	~<sysˇŒ.h
>

3 
	~<lib.h
>

4 
	~<vnode.h
>

5 
	~<uio.h
>

6 
	~<kîn/iovec.h
>

7 
	~<¨øy.h
>

8 
	~<cuºít.h
>

9 
	~<fûëabÀ.h
>

10 
	~<¥oc.h
>

11 
	~<kîn/î∫o.h
>

12 
	~<kîn/f˙é.h
>

13 
	~<c›yöout.h
>

14 
	$sys_wrôe
 (
fd
, c⁄° *
buf
, 
size_t
 
nbyãs
,
öt32_t
* 
ªtVÆ
){

15 
fd_íåy
* 
„
=
	`gë
(
cuΩroc
->
fd_¨øy
,
fd
,
NULL
);

16 if(
„
==
NULL
Ë 
EBADF
;

20 if(!
buf
){

21  
EFAULT
;

25 * 
check_buf
 = 
	`kmÆloc
((*));

26 
±r_îr
 = 
	`c›yö
((
c⁄°_u£Ωå_t
)
buf
, (*)
check_buf
, (*));

27 
	`k‰ì
(
check_buf
);

28 if(
±r_îr
){

29  
±r_îr
;

34 
fûe
* fûe=
„
->
f
;

36 
Êags
=(
fûe
->
°©us
)&
O_ACCMODE
;

37 
vnode
* 
vn
=
fûe
->vn;

38 
lock
* 
l
=
fûe
->l;

40 if(
Êags
==
O_RDONLY
Ë 
EBADF
;

42 
	`lock_acquúe
(
l
);

44 
uio
 uio;

45 
iovec
 
iov
;

46 
îr
;

47 * 
c
 =
	`k°rdup
((c⁄° *)
buf
);

49 
	`uio_köô
(&
iov
,&
uio
,
c
,
nbyãs
,
fûe
->
off£t
,
UIO_WRITE
);

50 
îr
=
	`VOP_WRITE
(
vn
,&
uio
);

52 if(
îr
){

53 
	`∑nic
("sys_writeÉrror\n");

54  
îr
;

57 
fûe
->
off£t
=
uio
.
uio_off£t
;

58 *
ªtVÆ
=
nbyãs
-
uio
.
uio_ªsid
;

59 
	`k‰ì
(
c
);

60 
	`lock_ªÀa£
(
l
);

62 
	}
}

	@time_syscalls.c

30 
	~<ty≥s.h
>

31 
	~<˛ock.h
>

32 
	~<c›yöout.h
>

33 
	~<sysˇŒ.h
>

39 
	$sys___time
(
u£Ωå_t
 
u£r_£c⁄ds_±r
, u£Ωå_à
u£r_«no£c⁄ds_±r
)

41 
time•ec
 
ts
;

42 
ªsu…
;

44 
	`gëtime
(&
ts
);

46 
ªsu…
 = 
	`c›yout
(&
ts
.
tv_£c
, 
u£r_£c⁄ds_±r
, (ts.tv_sec));

47 i‡(
ªsu…
) {

48  
ªsu…
;

51 
ªsu…
 = 
	`c›yout
(&
ts
.
tv_n£c
, 
u£r_«no£c⁄ds_±r
,

52 (
ts
.
tv_n£c
));

53 i‡(
ªsu…
) {

54  
ªsu…
;

58 
	}
}

	@
1
.
0
16
197
loadelf.c
runprogram.c
sys___getcwd.c
sys__exit.c
sys_chdir.c
sys_close.c
sys_dup2.c
sys_execv.c
sys_fork.c
sys_getpid.c
sys_lseek.c
sys_open.c
sys_read.c
sys_waitpid.c
sys_write.c
time_syscalls.c
