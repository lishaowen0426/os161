cscope 15 $HOME/os161/src/kern/syscall               0000026008
	@loadelf.c

53 
	~<ty≥s.h
>

54 
	~<kîn/î∫o.h
>

55 
	~<lib.h
>

56 
	~<uio.h
>

57 
	~<¥oc.h
>

58 
	~<cuºít.h
>

59 
	~<addr•a˚.h
>

60 
	~<vnode.h
>

61 
	~<ñf.h
>

157 
	$lﬂd_ñf
(
vnode
 *
v
, 
vaddr_t
 *
íåypoöt
)

159 
Elf_Ehdr
 
eh
;

160 
Elf_Phdr
 
ph
;

161 
ªsu…
, 
i
;

162 
iovec
 
iov
;

163 
uio
 
ku
;

164 
addr•a˚
 *
as
;

166 
as
 = 
	`¥oc_gëas
();

167 
as
->
¥og
=
v
;

172 
	`uio_köô
(&
iov
, &
ku
, &
eh
, ”h), 0, 
UIO_READ
);

173 
ªsu…
 = 
	`VOP_READ
(
v
, &
ku
);

174 i‡(
ªsu…
) {

175  
ªsu…
;

178 i‡(
ku
.
uio_ªsid
 != 0) {

180 
	`k¥ötf
("ELF: shortÑead on header - fileÅruncated?\n");

181  
ENOEXEC
;

195 i‡(
eh
.
e_idít
[
EI_MAG0
] !
ELFMAG0
 ||

196 
eh
.
e_idít
[
EI_MAG1
] !
ELFMAG1
 ||

197 
eh
.
e_idít
[
EI_MAG2
] !
ELFMAG2
 ||

198 
eh
.
e_idít
[
EI_MAG3
] !
ELFMAG3
 ||

199 
eh
.
e_idít
[
EI_CLASS
] !
ELFCLASS32
 ||

200 
eh
.
e_idít
[
EI_DATA
] !
ELFDATA2MSB
 ||

201 
eh
.
e_idít
[
EI_VERSION
] !
EV_CURRENT
 ||

202 
eh
.
e_vîsi⁄
 !
EV_CURRENT
 ||

203 
eh
.
e_ty≥
!=
ET_EXEC
 ||

204 
eh
.
e_machöe
!=
EM_MACHINE
) {

205  
ENOEXEC
;

223 
i
=0; i<
eh
.
e_phnum
; i++) {

224 
off_t
 
off£t
 = 
eh
.
e_phoff
 + 
i
*eh.
e_phítsize
;

225 
	`uio_köô
(&
iov
, &
ku
, &
ph
, ’h), 
off£t
, 
UIO_READ
);

227 
ªsu…
 = 
	`VOP_READ
(
v
, &
ku
);

228 i‡(
ªsu…
) {

229  
ªsu…
;

232 i‡(
ku
.
uio_ªsid
 != 0) {

234 
	`k¥ötf
("ELF: shortÑead onÖhdr - fileÅruncated?\n");

235  
ENOEXEC
;

238 
ph
.
p_ty≥
) {

239 
PT_NULL
: ;

240 
PT_PHDR
: ;

241 
PT_MIPS_REGINFO
: ;

242 
PT_LOAD
: ;

244 
	`k¥ötf
("loadelf: unknown segmentÅype %d\n",

245 
ph
.
p_ty≥
);

246  
ENOEXEC
;

249 
ªsu…
 = 
	`as_deföe_ªgi⁄
(
as
,

250 
ph
.
p_vaddr
,Öh.
p_memsz
,

251 
i
,

252 
ph
.
p_Êags
 & 
PF_R
,

253 
ph
.
p_Êags
 & 
PF_W
,

254 
ph
.
p_Êags
 & 
PF_X
);

255 i‡(
ªsu…
) {

256  
ªsu…
;

260 
ªsu…
 = 
	`as_¥ï¨e_lﬂd
(
as
);

261 i‡(
ªsu…
) {

262  
ªsu…
;

305 
ªsu…
 = 
	`as_com∂ëe_lﬂd
(
as
);

306 i‡(
ªsu…
) {

307  
ªsu…
;

310 *
íåypoöt
 = 
eh
.
e_íåy
;

313 
	}
}

	@runprogram.c

36 
	~<ty≥s.h
>

37 
	~<kîn/î∫o.h
>

38 
	~<kîn/f˙é.h
>

39 
	~<lib.h
>

40 
	~<¥oc.h
>

41 
	~<cuºít.h
>

42 
	~<addr•a˚.h
>

43 
	~<vm.h
>

44 
	~<vfs.h
>

45 
	~<sysˇŒ.h
>

46 
	~<ã°.h
>

55 
	$ru≈rogøm
(*
¥og«me
)

57 
addr•a˚
 *
as
;

58 
vnode
 *
v
;

59 
vaddr_t
 
íåypoöt
, 
°ack±r
;

60 
ªsu…
;

63 
ªsu…
 = 
	`vfs_›í
(
¥og«me
, 
O_RDONLY
, 0, &
v
);

64 i‡(
ªsu…
) {

65  
ªsu…
;

68 
	`KASSERT
(
	`¥oc_gëas
(Ë=
NULL
);

71 
as
 = 
	`as_¸óã
();

72 i‡(
as
 =
NULL
) {

73 
	`vfs_˛o£
(
v
);

74  
ENOMEM
;

76 
as
->
as_id
=
cuΩroc
->
pi
->
pid
;

78 
	`¥oc_£ès
(
as
);

79 
	`k¥ötf
("beforeásáctivate\n");

80 
	`as_a˘iv©e
();

81 
	`k¥ötf
("afterásáctivate\n");

84 
ªsu…
 = 
	`lﬂd_ñf
(
v
, &
íåypoöt
);

86 i‡(
ªsu…
) {

88 
	`vfs_˛o£
(
v
);

89  
ªsu…
;

96 
ªsu…
 = 
	`as_deföe_°ack
(
as
, &
°ack±r
);

97 i‡(
ªsu…
) {

99  
ªsu…
;

102 
	`k¥ötf
("beforeÉnterÇewÖrocess\n");

103 
	`íãr_√w_¥o˚ss
(0 , 
NULL
 ,

104 
NULL
 ,

105 
°ack±r
, 
íåypoöt
);

108 
	`∑nic
("enter_new_processÑeturned\n");

109  
EINVAL
;

110 
	}
}

	@sys___getcwd.c

1 
	~<ty≥s.h
>

2 
	~<sysˇŒ.h
>

3 
	~<uio.h
>

4 
	~<kîn/iovec.h
>

5 
	~<vfs.h
>

6 
	~<lib.h
>

7 
	~<kîn/î∫o.h
>

8 
	~<c›yöout.h
>

14 
	$sys___gëcwd
(*
buf
, 
size_t
 
buÊí
, 
öt32_t
* 
ªtvÆ
){

17 if(!
buf
){

18  
EFAULT
;

22 *
c›õd_buf
 = 
	`kmÆloc
((*));

23 
îr
;

25 
uio
 
cwd
;

26 
iovec
 
iov
;

29 
	`uio_köô
(&
iov
, &
cwd
, 
c›õd_buf
, 
buÊí
, 0, 
UIO_READ
);

32 
îr
 = 
	`vfs_gëcwd
(&
cwd
);

34 if(
îr
){

35 
	`∑nic
("sys___getcwdÉrror\n");

36  
îr
;

40 
îr
 = 
	`c›yout
((c⁄° *)
c›õd_buf
, (
u£Ωå_t
)
buf
, (
size_t
)((*)));

41 
	`k‰ì
(
c›õd_buf
);

43 if(
îr
){

44  
îr
;

48 *
ªtvÆ
 = 
cwd
.
uio_off£t
;

51 
	}
}

	@sys__exit.c

1 
	~<ty≥s.h
>

2 
	~<sysˇŒ.h
>

3 
	~<pid.h
>

4 
	~<¥oc.h
>

5 
	~<thªad.h
>

6 
	~<cuºít.h
>

7 
	~<•l.h
>

8 
	~<vnode.h
>

9 
	~<addr•a˚.h
>

10 
	~<kîn/waô.h
>

11 
	$sys__exô
(
öt32_t
 
exô_code
){

15 
pid_öfo
* 
öfo
=
cuΩroc
->
pi
;

16 
	`KASSERT
(
öfo
!=
NULL
);

18 
	`KASSERT
(
cuπhªad
->
t_¥oc
==
cuΩroc
);

20 
	`lock_acquúe
(
öfo
->
pid_lock
);

23 
öfo
->
¥oc_exôed
=1;

25 
exô_ªg
=
	`_MKWAIT_EXIT
(
exô_code
);

26 
öfo
->
exô_code
=
exô_ªg
;

30 
ödex
=0;ödex<
	`¨øy_num
(
öfo
->
chûd_pid_öfo
);++index){

33 
pid_öfo
* 
chûd_öfo
=(pid_öfo*)
	`¨øy_gë
(
öfo
->
chûd_pid_öfo
,
ödex
);

39 
	`lock_acquúe
(
chûd_öfo
->
pid_lock
);

40 if(
chûd_öfo
->
¥oc_exôed
){

41 
	`¨øy_˛ónup
(
chûd_öfo
->
chûd_pid_öfo
);

42 
	`cv_brﬂdˇ°
(
chûd_öfo
->
pid_cv
,chûd_öfo->
pid_lock
);

43 
	`cv_de°roy
(
chûd_öfo
->
pid_cv
);

44 
	`lock_acquúe
(
pidèbÀ
.
lock
);

45 
	`bôm≠_unm¨k
(
pidèbÀ
.
bôm≠
,
chûd_öfo
->
pid
);

46 
	`lock_ªÀa£
(
pidèbÀ
.
lock
);

47 
	`lock_ªÀa£
(
chûd_öfo
->
pid_lock
);

48 
	`lock_de°roy
(
chûd_öfo
->
pid_lock
);

49 
	`k‰ì
(
chûd_öfo
);

52 
chûd_öfo
->
∑ª¡_pid
=-1;

53 
	`lock_ªÀa£
(
chûd_öfo
->
pid_lock
);

61 
	`¨øy_num
(
öfo
->
chûd_pid_öfo
)>0Ë
	`¨øy_ªmove
(info->child_pid_info,0);

64 if(
öfo
->
∑ª¡_pid
==-1){

68 
	`¨øy_˛ónup
(
öfo
->
chûd_pid_öfo
);

69 
	`cv_brﬂdˇ°
(
öfo
->
pid_cv
,öfo->
pid_lock
);

70 
	`cv_de°roy
(
öfo
->
pid_cv
);

72 
	`lock_acquúe
(
pidèbÀ
.
lock
);

73 
	`bôm≠_unm¨k
(
pidèbÀ
.
bôm≠
,
öfo
->
pid
);

74 
	`lock_ªÀa£
(
pidèbÀ
.
lock
);

76 
	`lock_ªÀa£
(
öfo
->
pid_lock
);

77 
	`lock_de°roy
(
öfo
->
pid_lock
);

78 
	`k‰ì
(
öfo
);

84 
	`cv_brﬂdˇ°
(
öfo
->
pid_cv
,öfo->
pid_lock
);

85 
	`lock_ªÀa£
(
öfo
->
pid_lock
);

90 
¥oc
* 
p
=
cuΩroc
;

93 if(
p
->
fd_¨øy
!=
NULL
){

95 
	`¨øy_num
(
p
->
fd_¨øy
)>0){

96 
fd_íåy
* 
„
=(fd_íåy*)
	`¨øy_gë
(
p
->
fd_¨øy
,0);

97 
	`KASSERT
(
„
!=
NULL
);

98 
	`sys_˛o£
(
„
->
fd
);

100 
	`KASSERT
(
	`¨øy_num
(
p
->
fd_¨øy
)==0);

101 
	`¨øy_˛ónup
(
p
->
fd_¨øy
);

103 
	`lock_de°roy
(
p
->
¨øy_lock
);

107 if(
p
->
p_cwd
){

108 
	`VOP_DECREF
(
p
->
p_cwd
);

109 
p
->
p_cwd
=
NULL
;

111 
	`KASSERT
(
p
!=
NULL
);

112 if(
p
->
p_addr•a˚
){

113 
addr•a˚
 *
as
;

114 
as
=
p
->
p_addr•a˚
;

115 
p
->
p_addr•a˚
=
NULL
;

116 
	`as_de°roy
(
as
);

118 
	`¥oc_ªmthªad
(
cuπhªad
);

119 
	`KASSERT
(
p
!=
NULL
);

120 
	`KASSERT
(
	`thªad¨øy_num
(&
p
->
p_thªads
)==0);

121 
	`thªad¨øy_˛ónup
(&
p
->
p_thªads
);

122 
	`•ölock_˛ónup
(&
p
->
p_lock
);

123 
	`k‰ì
(
p
->
p_«me
);

124 
	`k‰ì
(
p
);

126 
	`thªad_exô
();

128 
	}
}

134 
	$kexô
(
öt32_t
 
exô_code
){

136 
pid_öfo
* 
öfo
=
cuΩroc
->
pi
;

137 
	`KASSERT
(
öfo
!=
NULL
);

139 
	`KASSERT
(
cuπhªad
->
t_¥oc
==
cuΩroc
);

141 
	`lock_acquúe
(
öfo
->
pid_lock
);

144 
öfo
->
¥oc_exôed
=1;

146 
exô_ªg
=
	`_MKWAIT_SIG
(
exô_code
);

147 
öfo
->
exô_code
=
exô_ªg
;

151 
ödex
=0;ödex<
	`¨øy_num
(
öfo
->
chûd_pid_öfo
);++index){

154 
pid_öfo
* 
chûd_öfo
=(pid_öfo*)
	`¨øy_gë
(
öfo
->
chûd_pid_öfo
,
ödex
);

159 
	`lock_acquúe
(
chûd_öfo
->
pid_lock
);

160 if(
chûd_öfo
->
¥oc_exôed
){

161 
	`¨øy_˛ónup
(
chûd_öfo
->
chûd_pid_öfo
);

162 
	`cv_brﬂdˇ°
(
chûd_öfo
->
pid_cv
,chûd_öfo->
pid_lock
);

163 
	`cv_de°roy
(
chûd_öfo
->
pid_cv
);

164 
	`lock_acquúe
(
pidèbÀ
.
lock
);

165 
	`bôm≠_unm¨k
(
pidèbÀ
.
bôm≠
,
chûd_öfo
->
pid
);

166 
	`lock_ªÀa£
(
pidèbÀ
.
lock
);

167 
	`lock_ªÀa£
(
chûd_öfo
->
pid_lock
);

168 
	`lock_de°roy
(
chûd_öfo
->
pid_lock
);

169 
	`k‰ì
(
chûd_öfo
);

172 
chûd_öfo
->
∑ª¡_pid
=-1;

173 
	`lock_ªÀa£
(
chûd_öfo
->
pid_lock
);

181 
	`¨øy_num
(
öfo
->
chûd_pid_öfo
)>0Ë
	`¨øy_ªmove
(info->child_pid_info,0);

184 if(
öfo
->
∑ª¡_pid
==-1){

189 
	`¨øy_˛ónup
(
öfo
->
chûd_pid_öfo
);

190 
	`cv_brﬂdˇ°
(
öfo
->
pid_cv
,öfo->
pid_lock
);

191 
	`cv_de°roy
(
öfo
->
pid_cv
);

193 
	`lock_acquúe
(
pidèbÀ
.
lock
);

194 
	`bôm≠_unm¨k
(
pidèbÀ
.
bôm≠
,
öfo
->
pid
);

195 
	`lock_ªÀa£
(
pidèbÀ
.
lock
);

197 
	`lock_ªÀa£
(
öfo
->
pid_lock
);

198 
	`lock_de°roy
(
öfo
->
pid_lock
);

199 
	`k‰ì
(
öfo
);

205 
	`cv_brﬂdˇ°
(
öfo
->
pid_cv
,öfo->
pid_lock
);

206 
	`lock_ªÀa£
(
öfo
->
pid_lock
);

211 
¥oc
* 
p
=
cuΩroc
;

213 if(
p
->
fd_¨øy
!=
NULL
){

215 
	`¨øy_num
(
p
->
fd_¨øy
)>0){

216 
fd_íåy
* 
„
=(fd_íåy*)
	`¨øy_gë
(
p
->
fd_¨øy
,0);

217 
	`KASSERT
(
„
!=
NULL
);

218 
	`sys_˛o£
(
„
->
fd
);

220 
	`KASSERT
(
	`¨øy_num
(
p
->
fd_¨øy
)==0);

221 
	`¨øy_˛ónup
(
p
->
fd_¨øy
);

223 
	`lock_de°roy
(
p
->
¨øy_lock
);

227 if(
p
->
p_cwd
){

228 
	`VOP_DECREF
(
p
->
p_cwd
);

229 
p
->
p_cwd
=
NULL
;

231 
	`KASSERT
(
p
!=
NULL
);

232 if(
p
->
p_addr•a˚
){

233 
addr•a˚
 *
as
;

234 
as
=
p
->
p_addr•a˚
;

235 
p
->
p_addr•a˚
=
NULL
;

236 
	`as_de°roy
(
as
);

238 
	`¥oc_ªmthªad
(
cuπhªad
);

239 
	`KASSERT
(
p
!=
NULL
);

240 
	`KASSERT
(
	`thªad¨øy_num
(&
p
->
p_thªads
)==0);

241 
	`thªad¨øy_˛ónup
(&
p
->
p_thªads
);

242 
	`•ölock_˛ónup
(&
p
->
p_lock
);

243 
	`k‰ì
(
p
->
p_«me
);

244 
	`k‰ì
(
p
);

246 
	`thªad_exô
();

247 
	}
}

	@sys_chdir.c

1 
	~<ty≥s.h
>

2 
	~<sysˇŒ.h
>

3 
	~<vfs.h
>

4 
	~<kîn/î∫o.h
>

5 
	~<lib.h
>

6 
	~<c›yöout.h
>

11 
	$sys_chdú
(c⁄° *
∑th«me
, 
öt32_t
* 
ªtvÆ
){

14 if(!
∑th«me
){

15  
EFAULT
;

19 *
check±r
 = 
	`kmÆloc
((*));

20 
îr
 = 
	`c›yö
((
c⁄°_u£Ωå_t
)
∑th«me
, (*)
check±r
, (*));

21 
	`k‰ì
(
check±r
);

23 if(
îr
){

24  
îr
;

28 
Àn
 = 
	`°æí
(
∑th«me
);

30 if(
Àn
 == 0){

31  
EINVAL
;

35 *
∑th
 = 
	`kmÆloc
((*));

36 
size_t
 *
gŸ_Àn
 = 
	`kmÆloc
((size_t *));

37 
îr
 = 
	`c›yö°r
((
c⁄°_u£Ωå_t
)
∑th«me
, 
∑th
, (
size_t
)(
Àn
+1), 
gŸ_Àn
);

39 
	`k‰ì
(
gŸ_Àn
);

41 if(
îr
){

42 
	`k‰ì
(
∑th
);

43  
îr
;

47 
îr
 = 
	`vfs_chdú
(
∑th
);

50 if(
îr
){

51 *
ªtvÆ
 = (
öt32_t
)-1;

53 *
ªtvÆ
 = (
öt32_t
)0;

56  
îr
;

57 
	}
}

	@sys_close.c

1 
	~<ty≥s.h
>

2 
	~<sysˇŒ.h
>

3 
	~<cuºít.h
>

4 
	~<limôs.h
>

5 
	~<vnode.h
>

6 
	~<vfs.h
>

7 
	~<lib.h
>

8 
	~<fûëabÀ.h
>

9 
	~<¥oc.h
>

10 
	~<synch.h
>

11 
	~<kîn/î∫o.h
>

13 
	$sys_˛o£
 (
fd
){

15 
	`KASSERT
(
cuΩroc
!=
NULL
);

16 
	`lock_acquúe
(
cuΩroc
->
¨øy_lock
);

18 
ödex
=-1;

19 
fd_íåy
* 
„
=
	`gë
(
cuΩroc
->
fd_¨øy
,
fd
,&
ödex
);

20 if(
„
==
NULL
){

21 
	`lock_ªÀa£
(
cuΩroc
->
¨øy_lock
);

22  
EBADF
;

24 
	`KASSERT
(
ödex
!=-1);

25 
fûe
* fûe=
„
->
f
;

26 
vnode
* 
vn
=
fûe
->vn;

27 
lock
* 
l
=
fûe
->l;

29 
	`lock_acquúe
(
l
);

30 
	`KASSERT
(
fûe
->
ªfcou¡
>=1);

32 --(
fûe
->
ªfcou¡
);

34 if(
fûe
->
ªfcou¡
==0){

35 
	`VOP_DECREF
(
vn
);

36 
fûe
->
vÆid
=0;

37 
fûe
->
vn
=
NULL
;

38 
	`lock_ªÀa£
(
l
);

39 
	`lock_de°roy
(
l
);

40 
	`k‰ì
(
fûe
);

41 
„
->
f
=
NULL
;

42 
	`¨øy_ªmove
(
cuΩroc
->
fd_¨øy
,
ödex
);

43 
	`k‰ì
(
„
);

44 
	`lock_ªÀa£
(
cuΩroc
->
¨øy_lock
);

49 
„
->
f
=
NULL
;

50 
	`¨øy_ªmove
(
cuΩroc
->
fd_¨øy
,
ödex
);

51 
	`k‰ì
(
„
);

52 
	`lock_ªÀa£
(
l
);

53 
	`lock_ªÀa£
(
cuΩroc
->
¨øy_lock
);

59 
	}
}

	@sys_dup2.c

1 
	~<ty≥s.h
>

2 
	~<sysˇŒ.h
>

3 
	~<lib.h
>

4 
	~<fûëabÀ.h
>

5 
	~<cuºít.h
>

6 
	~<¥oc.h
>

7 
	~<kîn/î∫o.h
>

8 
	~<¨øy.h
>

9 
	~<limôs.h
>

10 
	$sys_dup2
(
ﬁdfd
, 
√wfd
,
öt32_t
* 
ªtvÆ
){

11 if(
√wfd
>=
OPEN_MAX
Ë 
EBADF
;

12 
	`lock_acquúe
(
cuΩroc
->
¨øy_lock
);

13 
fd_íåy
* 
„
=
	`gë
(
cuΩroc
->
fd_¨øy
,
ﬁdfd
,
NULL
);

14 if(
„
==
NULL
||
√wfd
<0){

15 
	`lock_ªÀa£
(
cuΩroc
->
¨øy_lock
);

16  
EBADF
;

19 if(
ﬁdfd
==
√wfd
){

20 *
ªtvÆ
=
√wfd
;

21 
	`lock_ªÀa£
(
cuΩroc
->
¨øy_lock
);

25 if(
	`gë
(
cuΩroc
->
fd_¨øy
,
√wfd
,
NULL
)!=NULL){

26 
	`lock_ªÀa£
(
cuΩroc
->
¨øy_lock
);

27 
	`sys_˛o£
(
√wfd
);

28 
	`lock_acquúe
(
cuΩroc
->
¨øy_lock
);

31 if(
	`¨øy_num
(
cuΩroc
->
fd_¨øy
)>=
OPEN_MAX
){

32 
	`lock_ªÀa£
(
cuΩroc
->
¨øy_lock
);

33  
EMFILE
;;

36 
fd_íåy
* 
√w_fdíåy
=
	`kmÆloc
((fd_entry));

37 if(
√w_fdíåy
==
NULL
Ë 
ENFILE
;

39 
√w_fdíåy
->
fd
=
√wfd
;

40 
√w_fdíåy
->
f
=
„
->f;

41 ++((
„
->
f
)->
ªfcou¡
);

42 
	`VOP_INCREF
(
„
->
f
->
vn
);

43 
	`¨øy_add
(
cuΩroc
->
fd_¨øy
,
√w_fdíåy
,
NULL
);

44 *
ªtvÆ
=
√wfd
;

45 
	`lock_ªÀa£
(
cuΩroc
->
¨øy_lock
);

48 
	}
}

	@sys_execv.c

1 
	~<ty≥s.h
>

2 
	~<kîn/î∫o.h
>

3 
	~<limôs.h
>

4 
	~<cuºít.h
>

5 
	~<addr•a˚.h
>

6 
	~<c›yöout.h
>

7 
	~<sysˇŒ.h
>

8 
	~<vfs.h
>

9 
	~<lib.h
>

10 
	~<kîn/f˙é.h
>

11 
	~<vnode.h
>

12 
	~<vm.h
>

13 
	~<¥oc.h
>

14 
	$sys_execv
(c⁄° * 
¥ogøm
,** 
¨gs
){

18 if(!
¥ogøm
||!
¨gs
){

19  
EFAULT
;

22 ** 
check_±r
=
	`kmÆloc
((*));

23 
±r_îr
=
	`c›yö
((
c⁄°_u£Ωå_t
)
¥ogøm
,
check_±r
,(*));

24 
	`k‰ì
(
check_±r
);

25 if(
±r_îr
){

26  
±r_îr
;

29 
addr•a˚
* 
√w_as
=
	`as_¸óã
();

30 if(
√w_as
==
NULL
Ë 
ENOMEM
;

32 
addr•a˚
* 
ﬁd_as
=
	`¥oc_gëas
();

33 
√w_as
->
as_id
=
ﬁd_as
->as_id;

34 
	`KASSERT
(
ﬁd_as
!=
NULL
);

35 
îr
;

36 * 
«me
=
NULL
;

37 
vnode
* 
v
;

39 
«me
=
	`k°rdup
(
¥ogøm
);

41 
îr
=
	`vfs_›í
(
«me
,
O_RDONLY
,0,&
v
);

42 if(
îr
){

43 
	`as_de°roy
(
√w_as
);

44 
	`k‰ì
(
«me
);

45  
îr
;

47 
	`k‰ì
(
«me
);

49 
vaddr_t
 
íåypoöt
,
°ack±r
;

50 
	`¥oc_£ès
(
√w_as
);

51 
	`as_a˘iv©e
();

53 
îr
=
	`lﬂd_ñf
(
v
,&
íåypoöt
);

54 if(
îr
){

55 
	`as_dó˘iv©e
();

56 
	`¥oc_£ès
(
ﬁd_as
);

57 
	`as_a˘iv©e
();

59 
	`as_de°roy
(
√w_as
);

60 
	`vfs_˛o£
(
v
);

61  
îr
;

66 
îr
=
	`as_deföe_°ack
(
√w_as
,&
°ack±r
);

67 if(
îr
){

68 
	`as_dó˘iv©e
();

69 
	`¥oc_£ès
(
ﬁd_as
);

70 
	`as_a˘iv©e
();

71 
	`vfs_˛o£
(
v
);

72 
	`as_de°roy
(
√w_as
);

73  
îr
;

77 
	`as_dó˘iv©e
();

78 
	`¥oc_£ès
(
ﬁd_as
);

79 
	`as_a˘iv©e
();

83 
¨gc
=0;

84 
size_t
 
p_size
=(*);

85 ** 
kaddr
=(**)
	`kmÆloc
(
p_size
);

87 
îr
=
	`c›yö
((
c⁄°_u£Ωå_t
)(
¨gs
+
¨gc
),
kaddr
,
p_size
);

88 if(
îr
){

90 
	`as_de°roy
(
√w_as
);

91 
	`k‰ì
(
kaddr
);

92  
îr
;

95 if(*
kaddr
==
NULL
) ;

96 ++
¨gc
;

99 if((
¨gc
*
p_size
+((*)0))>
ARG_MAX
){

100 
	`as_de°roy
(
√w_as
);

101 
	`k‰ì
(
kaddr
);

102  
E2BIG
;

105 
size_t
 
tŸÆ_Àn
=0;

106 
size_t
 
ö°r_Àn
;

107 
size_t
 
out°r_Àn
;

109 * 
k°r
=(*)
	`kmÆloc
(()*
ARG_MAX
);

111 
ödex
=0;ödex<
¨gc
;++index){

113 
	`c›yö
((
c⁄°_u£Ωå_t
)(
¨gs
+
ödex
),
kaddr
,
p_size
);

114 
îr
=
	`c›yö°r
((
c⁄°_u£Ωå_t
)*
kaddr
,
k°r
,
ARG_MAX
,&
ö°r_Àn
);

115 if(
îr
){

118 
	`as_de°roy
(
√w_as
);

119 
	`k‰ì
(
kaddr
);

120 
	`k‰ì
(
k°r
);

121  
EFAULT
;

123 
tŸÆ_Àn
+=
ö°r_Àn
;

125 
tŸÆ_Àn
=(total_len/4+1)*4;

128 
vaddr_t
 
¨r_ba£
=(
°ack±r
-(
¨gc
+1)*(*)-
tŸÆ_Àn
);

130 
vaddr_t
 
°r_ba£
=(
°ack±r
-
tŸÆ_Àn
);

131 
u£Ωå_t
 
¨gv
(u£Ωå_t)
¨r_ba£
;

132 
°ack±r
=
¨r_ba£
;

135 
ödex
=0;ödex<
¨gc
;++index){

137 
	`c›yö
((
c⁄°_u£Ωå_t
)(
¨gs
+
ödex
),
kaddr
,
p_size
);

138 
îr
=
	`c›yö°r
((
c⁄°_u£Ωå_t
)*
kaddr
,
k°r
,
ARG_MAX
,&
ö°r_Àn
);

139 if(
îr
){

140 
	`k¥ötf
("enterÉrr\n");

141 
	`as_de°roy
(
√w_as
);

142 
	`k‰ì
(
kaddr
);

143 
	`k‰ì
(
k°r
);

144  
EFAULT
;

147 
	`as_dó˘iv©e
();

148 
	`¥oc_£ès
(
√w_as
);

149 
	`as_a˘iv©e
();

152 
îr
=
	`c›yout
((c⁄° *)&
°r_ba£
,(
u£Ωå_t
)
¨r_ba£
,(*));

153 if(
îr
){

154 
	`as_dó˘iv©e
();

155 
	`¥oc_£ès
(
ﬁd_as
);

156 
	`as_a˘iv©e
();

157 
	`as_de°roy
(
√w_as
);

158 
	`k‰ì
(
kaddr
);

159 
	`k‰ì
(
k°r
);

160  
EFAULT
;

164 
îr
=
	`c›yout°r
(
k°r
,(
u£Ωå_t
)
°r_ba£
,
ARG_MAX
,&
out°r_Àn
);

165 if(
îr
){

166 
	`as_dó˘iv©e
();

167 
	`¥oc_£ès
(
ﬁd_as
);

168 
	`as_a˘iv©e
();

169 
	`as_de°roy
(
√w_as
);

170 
	`k‰ì
(
kaddr
);

171 
	`k‰ì
(
k°r
);

172  
EFAULT
;

176 
	`KASSERT
(
out°r_Àn
==
ö°r_Àn
);

177 
¨r_ba£
+=(*);

178 
°r_ba£
+=
ö°r_Àn
;

181 
	`as_dó˘iv©e
();

182 
	`¥oc_£ès
(
ﬁd_as
);

183 
	`as_a˘iv©e
();

187 
	`as_dó˘iv©e
();

188 
	`¥oc_£ès
(
√w_as
);

189 
	`as_a˘iv©e
();

192 *
kaddr
=
NULL
;

193 
îr
=
	`c›yout
(
kaddr
,(
u£Ωå_t
)
¨r_ba£
,
p_size
);

194 if(
îr
){

195 
	`k¥ötf
("enterÉrr\n");

196 
	`as_dó˘iv©e
();

197 
	`¥oc_£ès
(
ﬁd_as
);

198 
	`as_a˘iv©e
();

200 
	`k‰ì
(
kaddr
);

201 
	`k‰ì
(
k°r
);

202 
	`as_de°roy
(
ﬁd_as
);

203  
EFAULT
;

210 
	`as_de°roy
(
ﬁd_as
);

214 
	`íãr_√w_¥o˚ss
(
¨gc
,(
u£Ωå_t
)
¨gv
,
NULL
,
°ack±r
,
íåypoöt
);

215 
	}
}

	@sys_fork.c

1 
	~<ty≥s.h
>

2 
	~<•l.h
>

3 
	~<lib.h
>

4 
	~<kîn/î∫o.h
>

5 
	~<addr•a˚.h
>

6 
	~<cuºít.h
>

7 
	~<¥oc.h
>

8 
	~<pid.h
>

9 
	~<thªad.h
>

10 
	~<mùs/å≠‰ame.h
>

11 
	~<limôs.h
>

12 
	~<synch.h
>

13 
	~<sysˇŒ.h
>

14 
	~<vm.h
>

16 
sys_f‹k
(
å≠‰ame
* 
tf
,(*
íåypoöt
)(*
d©a1
, 
d©a2
),
öt32_t
* 
ªtvÆ
){

20 
•l
=
	`•lhigh
();

22 
îr
;

25 
å≠‰ame
* 
tf_c›y
=(å≠‰ame*)
	`kmÆloc
((trapframe));

26 
	`memmove
(
tf_c›y
,
tf
,(
å≠‰ame
));

28 
¥oc
* 
√w¥oc
;

30 
√w¥oc
=(
¥oc
*)
	`kmÆloc
((proc));

31 if(
√w¥oc
==
NULL
){

32 
	`k‰ì
(
tf_c›y
);

33  
ENOMEM
;

35 
√w¥oc
->
p_«me
=
	`k°rdup
("proc");

36 if(
√w¥oc
->
p_«me
==
NULL
){

37 
	`k‰ì
(
√w¥oc
);

38 
	`k‰ì
(
tf_c›y
);

39  
ENOMEM
;

79 
	`thªad¨øy_öô
(&
√w¥oc
->
p_thªads
);

80 
	`•ölock_öô
(&
√w¥oc
->
p_lock
);

81 
√w¥oc
->
p_addr•a˚
=
NULL
;

82 
√w¥oc
->
p_cwd
=
NULL
;

83 
√w¥oc
->
fd_¨øy
=
	`¨øy_¸óã
();

84 
√w¥oc
->
¨øy_lock
=
	`lock_¸óã
("l");

89 
îr
=
	`as_c›y
(
cuΩroc
->
p_addr•a˚
,&(
√w¥oc
->p_addrspace));

91 if(
îr
){

92 
	`k‰ì
(
tf_c›y
);

93 
	`¥oc_de°roy
(
√w¥oc
);

94  
îr
;

97 
	`fd_¨øy_c›y
(
cuΩroc
,
√w¥oc
);

100 
	`•ölock_acquúe
(&
cuΩroc
->
p_lock
);

101 i‡(
cuΩroc
->
p_cwd
 !
NULL
) {

102 
	`VOP_INCREF
(
cuΩroc
->
p_cwd
);

103 
√w¥oc
->
p_cwd
 = 
cuΩroc
->p_cwd;

105 
	`•ölock_ªÀa£
(&
cuΩroc
->
p_lock
);

109 
pid_t
 
chûd_pid
=-1;

110 
îr
=
	`gë_pid
(&
pidèbÀ
,&
chûd_pid
);

111 if(
îr
){

112 
	`k‰ì
(
tf_c›y
);

113 
	`¥oc_de°roy
(
√w¥oc
);

114  
îr
;

116 
	`KASSERT
(
chûd_pid
>=
PID_MIN
&&chûd_pid<=
PID_MAX
);

118 
pid_öfo
* 
pi
=(pid_öfo*)
	`kmÆloc
((pid_info));

119 if(
pi
==
NULL
){

120 
	`k‰ì
(
tf_c›y
);

121 
	`¥oc_de°roy
(
√w¥oc
);

122  
ENPROC
;

125 
pi
->
pid
=
chûd_pid
;

126 
pi
->
∑ª¡_pid
=
cuΩroc
->pi->
pid
;

127 
pi
->
¥oc_exôed
=0;

128 
pi
->
waôed
=0;

129 
pi
->
pid_lock
=
	`lock_¸óã
("l");

130 
pi
->
pid_cv
=
	`cv_¸óã
("cv");

131 
pi
->
chûd_pid_öfo
=
	`¨øy_¸óã
();

132 
√w¥oc
->
pi
=pi;

133 
	`add_pid
(&
pidèbÀ
,
pi
);

136 
	`lock_acquúe
(
cuΩroc
->
pi
->
pid_lock
);

137 
	`¨øy_add
(
cuΩroc
->
pi
->
chûd_pid_öfo
,pi,
NULL
);

138 
	`lock_ªÀa£
(
cuΩroc
->
pi
->
pid_lock
);

139 
	`k¥ötf
("ﬁdÖid:%d,ÇewÖid:%d\n",
cuΩroc
->
pi
->
pid
,
√w¥oc
->pi->pid);

140 
√w¥oc
->
p_addr•a˚
->
as_id
=
chûd_pid
;

143 
	`thªad_f‹k
("¥oc",
√w¥oc
,
íåypoöt
,
tf_c›y
,0 );

146 *
ªtvÆ
=
chûd_pid
;

148 
	`•lx
(
•l
);

151 
	}
}

	@sys_getpid.c

1 
	~<ty≥s.h
>

2 
	~<cuºít.h
>

3 
	~<sysˇŒ.h
>

4 
	~<pid.h
>

5 
	~<¥oc.h
>

7 
	$sys_gëpid
(
öt32_t
* 
ªtvÆ
){

8 *
ªtvÆ
=(
öt32_t
)(
cuΩroc
->
pi
->
pid
);

10 
	}
}

	@sys_lseek.c

1 
	~<ty≥s.h
>

2 
	~<sysˇŒ.h
>

3 
	~<cuºít.h
>

4 
	~<fûëabÀ.h
>

5 
	~<¥oc.h
>

6 
	~<¨øy.h
>

7 
	~<kîn/£ek.h
>

8 
	~<kîn/°©.h
>

9 
	~<kîn/î∫o.h
>

10 
	~<kîn/°©ty≥s.h
>

12 
	$sys_l£ek
(
fd
, 
off_t
 
pos
, 
whí˚
,off_t* 
ªtvÆ
){

13 
fd_íåy
* 
„
=
	`gë
(
cuΩroc
->
fd_¨øy
,
fd
,
NULL
);

15 if(
„
==
NULL
Ë 
EBADF
;

17 
mode_t
 
ty≥
;

18 
fûe
* fûe=
„
->
f
;

19 
vnode
* 
vn
=
fûe
->vn;

20 
lock
* 
l
=
fûe
->l;

21 
off_t
 
√woff£t
;

23 
	`VOP_GETTYPE
(
vn
,&
ty≥
);

24 
ty≥
Òy≥&
_S_IFMT
;

25 if(
ty≥
==
_S_IFCHR
||ty≥==
_S_IFBLK
Ë 
ESPIPE
;

27 
	`lock_acquúe
(
l
);

29 if(
whí˚
==
SEEK_SET
){

30 
√woff£t
=
pos
;

32 if(
whí˚
==
SEEK_CUR
){

33 
√woff£t
=
fûe
->
off£t
+
pos
;

35 i‡(
whí˚
==
SEEK_END
){

36 
°©
* 
s
=
	`kmÆloc
((stat));

37 
	`KASSERT
(
s
!=
NULL
);

38 
	`VOP_STAT
(
vn
,
s
);

39 
√woff£t
=
s
->
°_size
+
pos
;

40 
	`k‰ì
(
s
);

43 
	`lock_ªÀa£
(
l
);

44  
EINVAL
;

47 if(
√woff£t
<0){

48 
	`lock_ªÀa£
(
l
);

49  
EINVAL
;

52 
fûe
->
off£t
=
√woff£t
;

53 *
ªtvÆ
=
√woff£t
;

54 
	`lock_ªÀa£
(
l
);

56 
	}
}

	@sys_open.c

1 
	~<ty≥s.h
>

2 
	~<sysˇŒ.h
>

3 
	~<cuºít.h
>

4 
	~<limôs.h
>

5 
	~<vnode.h
>

6 
	~<vfs.h
>

7 
	~<lib.h
>

8 
	~<fûëabÀ.h
>

9 
	~<¥oc.h
>

10 
	~<synch.h
>

11 
	~<kîn/î∫o.h
>

12 
	~<¨øy.h
>

13 
	~<vnode.h
>

14 
	~<kîn/°©.h
>

15 
	~<kîn/f˙é.h
>

16 
	~<c›yöout.h
>

18 
	$sys_›í
 (c⁄° *
fûíame
, 
Êags
, 
mode_t
 
mode
,
öt32_t
* 
ªtVÆ
){

22 if(!
fûíame
){

23  
EFAULT
;

27 * 
check_«me
=
	`kmÆloc
((*));

28 
±r_îr
 = 
	`c›yö
((
c⁄°_u£Ωå_t
)
fûíame
, (*)
check_«me
, (*));

29 
	`k‰ì
(
check_«me
);

30 if(
±r_îr
){

31  
±r_îr
;

39 
	`lock_acquúe
(
cuΩroc
->
¨øy_lock
);

40 if(
	`¨øy_num
(
cuΩroc
->
fd_¨øy
)>=
OPEN_MAX
){

41 
	`lock_ªÀa£
(
cuΩroc
->
¨øy_lock
);

42  
EMFILE
;

44 
fd
=0;

45 
	`gë
(
cuΩroc
->
fd_¨øy
,
fd
,
NULL
)!=NULL) ++fd;

47 
vnode
* 
vn
;

48 
fd_íåy
* 
„
;

49 
fûe
* file;

50 
îr
;

51 * 
«me
=
	`k°rdup
(
fûíame
);

52 
îr
=
	`vfs_›í
(
«me
,
Êags
,
mode
,&
vn
);

53 if(
îr
) {

54 
	`lock_ªÀa£
(
cuΩroc
->
¨øy_lock
);

55  
îr
;

58 
fûe
=
	`kmÆloc
((file));

59 if(
fûe
==
NULL
){

60 
	`lock_ªÀa£
(
cuΩroc
->
¨øy_lock
);

61  
ENFILE
;

65 
fûe
->
ªfcou¡
=1;

66 
fûe
->
°©us
=
Êags
;

67 
fûe
->
vn
=vn;

68 
fûe
->
l
=
	`lock_¸óã
("l");

69 
fûe
->
vÆid
=1;

70 if(
Êags
&
O_APPEND
){

71 
°©
* 
s
=
	`kmÆloc
((stat));

72 
	`KASSERT
(
s
!=
NULL
);

73 
	`VOP_STAT
(
vn
,
s
);

74 
fûe
->
off£t
=
s
->
°_size
;

77 
fûe
->
off£t
=0;

79 
„
=
	`kmÆloc
((
fd_íåy
));

80 if(
„
==
NULL
) {

81 
	`lock_ªÀa£
(
cuΩroc
->
¨øy_lock
);

82  
EMFILE
;

85 
„
->
fd
=fd;

86 
„
->
f
=
fûe
;

88 
	`fûëabÀ_ö£π
(&
fûëabÀ
,
fûe
);

89 
	`¨øy_add
(
cuΩroc
->
fd_¨øy
,
„
,
NULL
);

90 *
ªtVÆ
=
fd
;

91 
	`lock_ªÀa£
(
cuΩroc
->
¨øy_lock
);

93 
	}
}

	@sys_read.c

1 
	~<ty≥s.h
>

2 
	~<sysˇŒ.h
>

3 
	~<cuºít.h
>

4 
	~<limôs.h
>

5 
	~<vnode.h
>

6 
	~<vfs.h
>

7 
	~<lib.h
>

8 
	~<fûëabÀ.h
>

9 
	~<¥oc.h
>

10 
	~<synch.h
>

11 
	~<kîn/î∫o.h
>

12 
	~<uio.h
>

13 
	~<kîn/iovec.h
>

14 
	~<kîn/f˙é.h
>

15 
	~<c›yöout.h
>

17 
	$sys_ªad
 (
fd
, *
buf
, 
size_t
 
buÊí
,
öt32_t
* 
ªtVÆ
){

19 if(!
buf
){

20  
EFAULT
;

32 
fd_íåy
* 
„
=
	`gë
(
cuΩroc
->
fd_¨øy
,
fd
,
NULL
);

33 if(
„
==
NULL
Ë 
EBADF
;

35 
fûe
* fûe=
„
->
f
;

36 
vnode
* 
vn
=
fûe
->vn;

37 
Êags
=(
fûe
->
°©us
)&
O_ACCMODE
;

39 if(
Êags
&
O_WRONLY
Ë 
EBADF
;

41 
uio
 
ku
;

42 
iovec
 
iov
;

43 
îr
;

44 * 
kbuf
=
	`kmÆloc
(
buÊí
);

45 
	`uio_köô
(&
iov
,&
ku
,
kbuf
,
buÊí
,
fûe
->
off£t
,
UIO_READ
);

48 
îr
=
	`VOP_READ
(
vn
,&
ku
);

49 if(
îr
){

50 
	`∑nic
("sysÑeadÉrror\n");

51  
îr
;

54 
fûe
->
off£t
=
ku
.
uio_off£t
;

55 *
ªtVÆ
=
buÊí
-
ku
.
uio_ªsid
;

57 if(
buf
){

58 
îr
=
	`c›yout
(
kbuf
,(
u£Ωå_t
)
buf
,
buÊí
);

59 if(
îr
){

60 
	`k‰ì
(
kbuf
);

61  
îr
;

64 
	`k‰ì
(
kbuf
);

66 
	}
}

	@sys_waitpid.c

1 
	~<ty≥s.h
>

2 
	~<cuºít.h
>

3 
	~<¥oc.h
>

4 
	~<pid.h
>

5 
	~<kîn/î∫o.h
>

6 
	~<sysˇŒ.h
>

7 
	~<synch.h
>

8 
	~<c›yöout.h
>

9 
	$sys_waôpid
(
pid_t
 
pid
,* 
°©us
,
›ti⁄s
,
öt32_t
* 
ªtvÆ
){

11 if(
›ti⁄s
!=0Ë 
EINVAL
;

13 
pid_öfo
* 
öfo
=
	`gë_¥oc
(&
pidèbÀ
,
pid
);

14 if(
öfo
==
NULL
) {

15  
ESRCH
;

19 
	`lock_acquúe
(
öfo
->
pid_lock
);

20 if(
öfo
->
∑ª¡_pid
!=-1&&öfo->∑ª¡_pid!=
cuΩroc
->
pi
->
pid
){

21 
	`k¥ötf
("!!!!!!!!!!");

22 
	`lock_ªÀa£
(
öfo
->
pid_lock
);

23  
ECHILD
;

25 
öfo
->
¥oc_exôed
==0){

26 
	`cv_waô
(
öfo
->
pid_cv
,öfo->
pid_lock
);

28 if(
°©us
){

29 * 
check_±r
=
	`kmÆloc
((*));

30 *
check_±r
=
öfo
->
exô_code
;

31 
±r_îr
=
	`c›yout
((c⁄° *)
check_±r
,(
u£Ωå_t
)
°©us
,());

32 
	`k‰ì
(
check_±r
);

34 if(
±r_îr
){

35 
	`lock_ªÀa£
(
öfo
->
pid_lock
);

36  
±r_îr
;

39 *
ªtvÆ
=
pid
;

59 
	`lock_ªÀa£
(
öfo
->
pid_lock
);

61 
	}
}

64 
	$kwaôpid
(
pid_t
 
pid
){

66 
pid_öfo
* 
öfo
=
	`gë_¥oc
(&
pidèbÀ
,
pid
);

67 if(
öfo
==
NULL
) {

68  
ESRCH
;

72 
	`lock_acquúe
(
öfo
->
pid_lock
);

73 if(
öfo
->
∑ª¡_pid
!=-1&&öfo->∑ª¡_pid!=
cuΩroc
->
pi
->
pid
){

74 
	`lock_ªÀa£
(
öfo
->
pid_lock
);

75  
ECHILD
;

78 
öfo
->
¥oc_exôed
==0){

79 
	`cv_waô
(
öfo
->
pid_cv
,öfo->
pid_lock
);

81 
	`KASSERT
(
	`¨øy_num
(
öfo
->
chûd_pid_öfo
)==0);

82 
	`¨øy_˛ónup
(
öfo
->
chûd_pid_öfo
);

83 
	`cv_de°roy
(
öfo
->
pid_cv
);

84 
	`lock_acquúe
(
pidèbÀ
.
lock
);

85 
	`bôm≠_unm¨k
(
pidèbÀ
.
bôm≠
,
öfo
->
pid
);

86 
	`lock_ªÀa£
(
pidèbÀ
.
lock
);

87 
ödex
=0;ödex<
	`¨øy_num
(
cuΩroc
->
pi
->
chûd_pid_öfo
);++index){

88 
pid_öfo
* 
ãmp
=(pid_öfo*Ë
	`¨øy_gë
(
cuΩroc
->
pi
->
chûd_pid_öfo
,
ödex
);

89 if(
ãmp
->
pid
==pid){

90 
	`¨øy_ªmove
(
cuΩroc
->
pi
->
chûd_pid_öfo
,
ödex
);

94 
	`lock_ªÀa£
(
öfo
->
pid_lock
);

95 
	`lock_de°roy
(
öfo
->
pid_lock
);

96 
	`k‰ì
(
öfo
);

99 
	}
}

	@sys_write.c

1 
	~<ty≥s.h
>

2 
	~<sysˇŒ.h
>

3 
	~<lib.h
>

4 
	~<vnode.h
>

5 
	~<uio.h
>

6 
	~<kîn/iovec.h
>

7 
	~<¨øy.h
>

8 
	~<cuºít.h
>

9 
	~<fûëabÀ.h
>

10 
	~<¥oc.h
>

11 
	~<kîn/î∫o.h
>

12 
	~<kîn/f˙é.h
>

13 
	~<c›yöout.h
>

14 
	$sys_wrôe
 (
fd
, c⁄° *
buf
, 
size_t
 
nbyãs
,
öt32_t
* 
ªtVÆ
){

15 
fd_íåy
* 
„
=
	`gë
(
cuΩroc
->
fd_¨øy
,
fd
,
NULL
);

16 if(
„
==
NULL
Ë 
EBADF
;

20 if(!
buf
){

21  
EFAULT
;

25 * 
check_buf
 = 
	`kmÆloc
((*));

26 
±r_îr
 = 
	`c›yö
((
c⁄°_u£Ωå_t
)
buf
, (*)
check_buf
, (*));

27 
	`k‰ì
(
check_buf
);

28 if(
±r_îr
){

29  
±r_îr
;

34 
fûe
* fûe=
„
->
f
;

36 
Êags
=(
fûe
->
°©us
)&
O_ACCMODE
;

37 
vnode
* 
vn
=
fûe
->vn;

38 
lock
* 
l
=
fûe
->l;

40 if(
Êags
==
O_RDONLY
Ë 
EBADF
;

42 
	`lock_acquúe
(
l
);

44 
uio
 uio;

45 
iovec
 
iov
;

46 
îr
;

47 * 
c
 =
	`k°rdup
((c⁄° *)
buf
);

49 
	`uio_köô
(&
iov
,&
uio
,
c
,
nbyãs
,
fûe
->
off£t
,
UIO_WRITE
);

50 
îr
=
	`VOP_WRITE
(
vn
,&
uio
);

52 if(
îr
){

53 
	`∑nic
("sys_writeÉrror\n");

54  
îr
;

57 
fûe
->
off£t
=
uio
.
uio_off£t
;

58 *
ªtVÆ
=
nbyãs
-
uio
.
uio_ªsid
;

59 
	`k‰ì
(
c
);

60 
	`lock_ªÀa£
(
l
);

62 
	}
}

	@time_syscalls.c

30 
	~<ty≥s.h
>

31 
	~<˛ock.h
>

32 
	~<c›yöout.h
>

33 
	~<sysˇŒ.h
>

39 
	$sys___time
(
u£Ωå_t
 
u£r_£c⁄ds_±r
, u£Ωå_à
u£r_«no£c⁄ds_±r
)

41 
time•ec
 
ts
;

42 
ªsu…
;

44 
	`gëtime
(&
ts
);

46 
ªsu…
 = 
	`c›yout
(&
ts
.
tv_£c
, 
u£r_£c⁄ds_±r
, (ts.tv_sec));

47 i‡(
ªsu…
) {

48  
ªsu…
;

51 
ªsu…
 = 
	`c›yout
(&
ts
.
tv_n£c
, 
u£r_«no£c⁄ds_±r
,

52 (
ts
.
tv_n£c
));

53 i‡(
ªsu…
) {

54  
ªsu…
;

58 
	}
}

	@
1
.
0
16
197
loadelf.c
runprogram.c
sys___getcwd.c
sys__exit.c
sys_chdir.c
sys_close.c
sys_dup2.c
sys_execv.c
sys_fork.c
sys_getpid.c
sys_lseek.c
sys_open.c
sys_read.c
sys_waitpid.c
sys_write.c
time_syscalls.c
